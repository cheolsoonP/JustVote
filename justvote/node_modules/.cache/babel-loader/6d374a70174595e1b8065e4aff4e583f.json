{"ast":null,"code":"/* REGISTER */\nimport * as types from \"./types\";\nconst initialState = {\n  register: {\n    status: \"INIT\"\n  },\n  duplicate: {\n    status: \"INIT\"\n  }\n};\nexport default function register(state = initialState, action) {\n  switch (action.type) {\n    /* REGISTER */\n    case types.REGISTER:\n      return { ...state,\n        register: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.REGISTER_SUCCESS:\n      return { ...state,\n        register: { ...state.register,\n          status: \"SUCCESS\"\n        }\n      };\n\n    case types.REGISTER_FAILURE:\n      return { ...state,\n        register: {\n          status: \"FAILURE\"\n        }\n      };\n\n    /* DUPLICATE CHECK */\n\n    case types.DUPLICATE:\n      return { ...state,\n        duplicate: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.DUPLICATE_NOT:\n      return { ...state,\n        duplicate: {\n          status: \"ABLE\"\n        }\n      };\n\n    case types.DUPLICATE_YES:\n      return { ...state,\n        duplicate: {\n          status: \"UNABLE\"\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/signup/reducer.js"],"names":["types","initialState","register","status","duplicate","state","action","type","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","DUPLICATE","DUPLICATE_NOT","DUPLICATE_YES"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA,GADS;AAInBC,EAAAA,SAAS,EAAE;AACTD,IAAAA,MAAM,EAAE;AADC;AAJQ,CAArB;AASA,eAAe,SAASD,QAAT,CAAkBG,KAAK,GAAGJ,YAA1B,EAAwCK,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKP,KAAK,CAACQ,QAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,QAAQ,EAAE;AACRC,UAAAA,MAAM,EAAE;AADA;AAFL,OAAP;;AAMF,SAAKH,KAAK,CAACS,gBAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,QAAQ,EAAE,EACR,GAAGG,KAAK,CAACH,QADD;AAERC,UAAAA,MAAM,EAAE;AAFA;AAFL,OAAP;;AAOF,SAAKH,KAAK,CAACU,gBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,QAAQ,EAAE;AACRC,UAAAA,MAAM,EAAE;AADA;AAFL,OAAP;;AAOF;;AACA,SAAKH,KAAK,CAACW,SAAX;AACE,aAAO,EACL,GAAGN,KADE;AAELD,QAAAA,SAAS,EAAE;AACTD,UAAAA,MAAM,EAAE;AADC;AAFN,OAAP;;AAMF,SAAKH,KAAK,CAACY,aAAX;AACE,aAAO,EACL,GAAGP,KADE;AAELD,QAAAA,SAAS,EAAE;AACTD,UAAAA,MAAM,EAAE;AADC;AAFN,OAAP;;AAMF,SAAKH,KAAK,CAACa,aAAX;AACE,aAAO,EACL,GAAGR,KADE;AAELD,QAAAA,SAAS,EAAE;AACTD,UAAAA,MAAM,EAAE;AADC;AAFN,OAAP;;AAMF;AACE,aAAOE,KAAP;AAhDJ;AAkDD","sourcesContent":["/* REGISTER */\r\nimport * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  register: {\r\n    status: \"INIT\",\r\n  },\r\n  duplicate: {\r\n    status: \"INIT\",\r\n  },\r\n};\r\n\r\nexport default function register(state = initialState, action) {\r\n  switch (action.type) {\r\n    /* REGISTER */\r\n    case types.REGISTER:\r\n      return {\r\n        ...state,\r\n        register: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        register: {\r\n          ...state.register,\r\n          status: \"SUCCESS\",\r\n        },\r\n      };\r\n    case types.REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        register: {\r\n          status: \"FAILURE\",\r\n        },\r\n      };\r\n\r\n    /* DUPLICATE CHECK */\r\n    case types.DUPLICATE:\r\n      return {\r\n        ...state,\r\n        duplicate: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.DUPLICATE_NOT:\r\n      return {\r\n        ...state,\r\n        duplicate: {\r\n          status: \"ABLE\",\r\n        },\r\n      };\r\n    case types.DUPLICATE_YES:\r\n      return {\r\n        ...state,\r\n        duplicate: {\r\n          status: \"UNABLE\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}