{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\CreateVote.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport propTypes from \"prop-types\"; //import \"../styles/makevote.css\";\n// import axios from 'axios';\n// import { CreateVotes } from '../redux/makevote/actions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateVote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      voteTitle: \"\",\n      voteContents: [\"\", \"\"]\n    };\n\n    this.handleChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n      console.log(this.state);\n    };\n\n    this.addAnswer = e => {\n      this.setState({\n        voteContents: [...this.state.voteContents, \"\"]\n      });\n    };\n\n    this.removeAnswer = index => {\n      const newContents = this.state.voteContents.filter((content, i) => {\n        return i !== index;\n      });\n      this.setState(newContents);\n    };\n\n    this.removeAnswer = num => {\n      const {\n        comments\n      } = this.state;\n      const nextComments = comments.filter(comment => {\n        return comment.num !== num;\n      });\n      this.setState({\n        comments: nextComments\n      });\n    };\n\n    this.handleAnswer = (e, index) => {\n      const voteContents = [...this.state.voteContents];\n      voteContents[index] = e.target.value;\n      this.setState({\n        voteContents\n      });\n      console.log(this.state);\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let body = {\n      voteTitle: this.state.voteTitle,\n      voteContents: this.state.voteContents\n    };\n    this.props.onPost(body).then(() => {\n      this.setState({\n        voteTitle: \"\",\n        voteContents: [\"\", \"\"]\n      });\n    }); // this.props.CreateVotes(this.state);\n  }\n\n  render() {\n    const voteContents = this.state.voteContents.map((content, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"\\uD56D\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        value: content,\n        onChange: e => this.handleAnswer(e, i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"button\",\n        onClick: this.removeAnswer,\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"voteTitle\",\n        children: \"\\uD22C\\uD45C \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        name: \"voteTitle\",\n        value: this.state.question,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: voteContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons_center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"button\",\n          onClick: this.addAnswer,\n          children: \"\\uD56D\\uBAA9 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: \"\\uD22C\\uD45C \\uB9CC\\uB4E4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCreateVote.propTypes = {\n  onPost: propTypes.func\n};\nCreateVote.defaultProps = {\n  onPost: (voteTitle, voteContents) => {\n    console.error(\"post function not defined\");\n  }\n};\nexport default CreateVote; // export default connect(() => ({}), { CreateVotes })(CreateVote);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/CreateVote.js"],"names":["React","Component","Fragment","connect","propTypes","CreateVote","state","voteTitle","voteContents","handleChange","e","nextState","target","name","value","setState","console","log","addAnswer","removeAnswer","index","newContents","filter","content","i","num","comments","nextComments","comment","handleAnswer","handleSubmit","preventDefault","body","props","onPost","then","render","map","question","func","defaultProps","error"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport propTypes from \"prop-types\";\r\n//import \"../styles/makevote.css\";\r\n// import axios from 'axios';\r\n\r\n// import { CreateVotes } from '../redux/makevote/actions';\r\n\r\nclass CreateVote extends Component {\r\n  state = {\r\n    voteTitle: \"\",\r\n    voteContents: [\"\", \"\"],\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n    console.log(this.state);\r\n  };\r\n\r\n  addAnswer = (e) => {\r\n    this.setState({ voteContents: [...this.state.voteContents, \"\"] });\r\n  };\r\n\r\n  removeAnswer = (index) => {\r\n    const newContents = this.state.voteContents.filter((content, i) => {\r\n      return i !== index;\r\n    });\r\n\r\n    this.setState(newContents);\r\n  };\r\n\r\n  removeAnswer = (num) => {\r\n    const { comments } = this.state;\r\n    const nextComments = comments.filter((comment) => {\r\n      return comment.num !== num;\r\n    });\r\n    this.setState({\r\n      comments: nextComments,\r\n    });\r\n  };\r\n\r\n  handleAnswer = (e, index) => {\r\n    const voteContents = [...this.state.voteContents];\r\n    voteContents[index] = e.target.value;\r\n    this.setState({ voteContents });\r\n    console.log(this.state);\r\n  };\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    let body = {\r\n      voteTitle: this.state.voteTitle,\r\n      voteContents: this.state.voteContents,\r\n    };\r\n\r\n    this.props.onPost(body).then(() => {\r\n      this.setState({\r\n        voteTitle: \"\",\r\n        voteContents: [\"\", \"\"],\r\n      });\r\n    });\r\n    // this.props.CreateVotes(this.state);\r\n  }\r\n\r\n  render() {\r\n    const voteContents = this.state.voteContents.map((content, i) => (\r\n      <Fragment key={i}>\r\n        <label className=\"form-label\">항목</label>\r\n        <input\r\n          className=\"form-input\"\r\n          type=\"text\"\r\n          value={content}\r\n          key={i}\r\n          onChange={(e) => this.handleAnswer(e, i)}\r\n        />\r\n        <button className=\"button\" type=\"button\" onClick={this.removeAnswer}>\r\n          삭제\r\n        </button>\r\n      </Fragment>\r\n    ));\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form-label\" htmlFor=\"voteTitle\">\r\n          투표 제목\r\n        </label>\r\n        <input\r\n          className=\"form-input\"\r\n          type=\"text\"\r\n          name=\"voteTitle\"\r\n          value={this.state.question}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div className=\"container\">{voteContents}</div>\r\n        <div className=\"buttons_center\">\r\n          <button className=\"button\" type=\"button\" onClick={this.addAnswer}>\r\n            항목 추가\r\n          </button>\r\n        </div>\r\n        <button className=\"button\" type=\"submit\">\r\n          투표 만들기\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nCreateVote.propTypes = {\r\n  onPost: propTypes.func,\r\n};\r\n\r\nCreateVote.defaultProps = {\r\n  onPost: (voteTitle, voteContents) => {\r\n    console.error(\"post function not defined\");\r\n  },\r\n};\r\n\r\nexport default CreateVote;\r\n// export default connect(() => ({}), { CreateVotes })(CreateVote);\r\n"]},"metadata":{},"sourceType":"module"}