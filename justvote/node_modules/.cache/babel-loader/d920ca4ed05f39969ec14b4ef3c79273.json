{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\voteContainer.js\";\nimport React, { Component } from \"react\";\nimport createVote from \"./createVote\";\nimport { connect } from \"react-redux\";\nimport { votePostRequest } from \"../../redux/makevote/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass voteContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePost = (voteTitle, voteContents) => {\n      return this.props.votePostRequest(voteTitle, voteContents).then(() => {\n        if (this.props.postStatus.status === \"SUCCESS\") {\n          console.log(\"sR\"); // TRIGGER LOAD NEW MEMO\n          // Materialize.toast('Success!', 2000);\n          // } else {\n          //     /*\n          //       ERROR CODES\n          //           1: NOT LOGGED IN\n          //           2: CONTENTS IS NOT STRING\n          //           3: EMPTY CONTENTS\n          //     */\n          //     let $toastContent;\n          //     switch(this.props.postStatus.error) {\n          //         case 1:\n          //             // IF NOT LOGGED IN, NOTIFY AND REFRESH AFTER\n          //             $toastContent = $('<span style=\"color: #FFB4BA\">You are not logged in</span>');\n          //             Materialize.toast($toastContent, 2000);\n          //             setTimeout(()=> {location.reload(false);}, 2000);\n          //             break;\n          //         case 2:\n          //             $toastContent = $('<span style=\"color: #FFB4BA\">Contents should be string</span>');\n          //             Materialize.toast($toastContent, 2000);\n          //             break;\n          //         case 3:\n          //             $toastContent = $('<span style=\"color: #FFB4BA\">Please write Something</span>');\n          //             Materialize.toast($toastContent, 2000);\n          //             break;\n          //         default:\n          //             $toastContent = $('<span style=\"color: #FFB4BA\">Something Broke</span>');\n          //             Materialize.toast($toastContent, 2000);\n          //             break;\n          //     }\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"createVote\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    postStatus: state.vote.post\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    votePostRequest: (voteTitle, voteContents) => {\n      return dispatch(votePostRequest(voteTitle, voteContents));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(voteContainer);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/voteContainer.js"],"names":["React","Component","createVote","connect","votePostRequest","voteContainer","handlePost","voteTitle","voteContents","props","then","postStatus","status","console","log","render","mapStateToProps","state","vote","post","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,8BAAhC;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACpCK,UADoC,GACvB,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AACxC,aAAO,KAAKC,KAAL,CAAWL,eAAX,CAA2BG,SAA3B,EAAsCC,YAAtC,EAAoDE,IAApD,CAAyD,MAAM;AACpE,YAAI,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,KAAiC,SAArC,EAAgD;AAC9CC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAD8C,CAG9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,OAnCM,CAAP;AAoCD,KAtCmC;AAAA;;AAwCpCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA9CmC;;AAiDtC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACA,SAAO;AACLN,IAAAA,UAAU,EAAEM,KAAK,CAACC,IAAN,CAAWC;AADlB,GAAP;AAGD,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjB,IAAAA,eAAe,EAAE,CAACG,SAAD,EAAYC,YAAZ,KAA6B;AAC5C,aAAOa,QAAQ,CAACjB,eAAe,CAACG,SAAD,EAAYC,YAAZ,CAAhB,CAAf;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,aAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport createVote from \"./createVote\";\r\nimport { connect } from \"react-redux\";\r\nimport { votePostRequest } from \"../../redux/makevote/actions\";\r\n\r\nclass voteContainer extends Component {\r\n  handlePost = (voteTitle, voteContents) => {\r\n    return this.props.votePostRequest(voteTitle, voteContents).then(() => {\r\n      if (this.props.postStatus.status === \"SUCCESS\") {\r\n        console.log(\"sR\");\r\n\r\n        // TRIGGER LOAD NEW MEMO\r\n        // Materialize.toast('Success!', 2000);\r\n        // } else {\r\n        //     /*\r\n        //       ERROR CODES\r\n        //           1: NOT LOGGED IN\r\n        //           2: CONTENTS IS NOT STRING\r\n        //           3: EMPTY CONTENTS\r\n        //     */\r\n        //     let $toastContent;\r\n        //     switch(this.props.postStatus.error) {\r\n        //         case 1:\r\n        //             // IF NOT LOGGED IN, NOTIFY AND REFRESH AFTER\r\n        //             $toastContent = $('<span style=\"color: #FFB4BA\">You are not logged in</span>');\r\n        //             Materialize.toast($toastContent, 2000);\r\n        //             setTimeout(()=> {location.reload(false);}, 2000);\r\n        //             break;\r\n        //         case 2:\r\n        //             $toastContent = $('<span style=\"color: #FFB4BA\">Contents should be string</span>');\r\n        //             Materialize.toast($toastContent, 2000);\r\n        //             break;\r\n        //         case 3:\r\n        //             $toastContent = $('<span style=\"color: #FFB4BA\">Please write Something</span>');\r\n        //             Materialize.toast($toastContent, 2000);\r\n        //             break;\r\n        //         default:\r\n        //             $toastContent = $('<span style=\"color: #FFB4BA\">Something Broke</span>');\r\n        //             Materialize.toast($toastContent, 2000);\r\n        //             break;\r\n        //     }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <createVote />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    postStatus: state.vote.post,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    votePostRequest: (voteTitle, voteContents) => {\r\n      return dispatch(votePostRequest(voteTitle, voteContents));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(voteContainer);\r\n"]},"metadata":{},"sourceType":"module"}