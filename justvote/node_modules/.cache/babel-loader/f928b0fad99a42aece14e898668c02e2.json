{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createHistory, useQueries } from \"history\";\nimport { connectHistory } from \"redux-history\";\n/* 여러 미들웨어를 추가할 수 있도록  함. */\n\n/* 필요한 미들웨어 추가 시 [ ] 안에 넣어주면 됨. */\n\nconst history = useQueries(createHistory)();\nconst middleware = [thunk.withExtraArgument({\n  history: customHistory\n}), logger];\n/* 미들웨어  */\n\n/* ... 연산자는 껍데기를 빼고 내용물 집어넣음 */\n\n/* const store = createStore(rootReducer) */\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\nconst unconnectHistory = connectHistory(history, store);\nexport default store;","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/store.js"],"names":["createStore","applyMiddleware","rootReducer","logger","thunk","composeWithDevTools","createHistory","useQueries","connectHistory","history","middleware","withExtraArgument","customHistory","store","unconnectHistory"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,SAA1C;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA;;AACA;;AAEA,MAAMC,OAAO,GAAGF,UAAU,CAACD,aAAD,CAAV,EAAhB;AAEA,MAAMI,UAAU,GAAG,CACjBN,KAAK,CAACO,iBAAN,CAAwB;AAAEF,EAAAA,OAAO,EAAEG;AAAX,CAAxB,CADiB,EAEjBT,MAFiB,CAAnB;AAIA;;AACA;;AAEA;;AAEA,MAAMU,KAAK,GAAGb,WAAW,CACvBE,WADuB,EAEvBG,mBAAmB,CAACJ,eAAe,CAAC,GAAGS,UAAJ,CAAhB,CAFI,CAAzB;AAIA,MAAMI,gBAAgB,GAAGN,cAAc,CAACC,OAAD,EAAUI,KAAV,CAAvC;AAEA,eAAeA,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport logger from \"redux-logger\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createHistory, useQueries } from \"history\";\r\nimport { connectHistory } from \"redux-history\";\r\n\r\n/* 여러 미들웨어를 추가할 수 있도록  함. */\r\n/* 필요한 미들웨어 추가 시 [ ] 안에 넣어주면 됨. */\r\n\r\nconst history = useQueries(createHistory)();\r\n\r\nconst middleware = [\r\n  thunk.withExtraArgument({ history: customHistory }),\r\n  logger,\r\n];\r\n/* 미들웨어  */\r\n/* ... 연산자는 껍데기를 빼고 내용물 집어넣음 */\r\n\r\n/* const store = createStore(rootReducer) */\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\nconst unconnectHistory = connectHistory(history, store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}