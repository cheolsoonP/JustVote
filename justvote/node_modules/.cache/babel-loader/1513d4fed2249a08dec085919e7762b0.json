{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\MyDropzone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyDropzone() {\n  _s();\n\n  const onDrop = useCallback(async acceptedFiles => {\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\n    // 폼데이터 구성\n    const formData = new FormData();\n    const config = {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    formData.append(\"file\", acceptedFiles[0]);\n    console.log(acceptedFiles[0]); // 배포시에는 지워줘야 합니다.\n\n    await axios.post(\"http://localhost:8080/imgRegister\", formData, config).then(res => {\n      console.log(res);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  const InputProps = { ...getInputProps(),\n    multiple: false,\n    accept: \"image/gif, image/jpg, image/jpeg\"\n  };\n  const RootProps = { ...getRootProps()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop the files here ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drag 'n' drop some files here, or click to select files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyDropzone, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = MyDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropzone\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/MyDropzone.js"],"names":["React","useCallback","useDropzone","axios","Dropzone","MyDropzone","onDrop","acceptedFiles","formData","FormData","config","header","append","console","log","post","then","res","getRootProps","getInputProps","isDragActive","InputProps","multiple","accept","RootProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,MAAM,GAAGL,WAAW,CAAC,MAAOM,aAAP,IAAyB;AAClD;AACA;AAEA;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE;AACN,wBAAgB;AADV;AADK,KAAf;AAKAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,aAAa,CAAC,CAAD,CAArC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAa,CAAC,CAAD,CAAzB,EAZkD,CAclD;;AACA,UAAMJ,KAAK,CACRY,IADG,CACE,mCADF,EACuCP,QADvC,EACiDE,MADjD,EAEHM,IAFG,CAEGC,GAAD,IAAS;AACbJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAJG,CAAN;AAKD,GApByB,EAoBvB,EApBuB,CAA1B;AAsBA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDlB,WAAW,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAjE;AAEA,QAAMe,UAAU,GAAG,EACjB,GAAGF,aAAa,EADC;AAEjBG,IAAAA,QAAQ,EAAE,KAFO;AAGjBC,IAAAA,MAAM,EAAE;AAHS,GAAnB;AAMA,QAAMC,SAAS,GAAG,EAChB,GAAGN,YAAY;AADC,GAAlB;AAIA,sBACE,oBAASA,YAAY,EAArB;AAAA,4BACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA7CuBf,U;UAuBgCH,W;;;KAvBhCG,U","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function MyDropzone() {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\r\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\r\n\r\n    // 폼데이터 구성\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n    console.log(acceptedFiles[0]);\r\n\r\n    // 배포시에는 지워줘야 합니다.\r\n    await axios\r\n      .post(\"http://localhost:8080/imgRegister\", formData, config)\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const InputProps = {\r\n    ...getInputProps(),\r\n    multiple: false,\r\n    accept: \"image/gif, image/jpg, image/jpeg\",\r\n  };\r\n\r\n  const RootProps = {\r\n    ...getRootProps(),\r\n  };\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop the files here ...</p>\r\n      ) : (\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}