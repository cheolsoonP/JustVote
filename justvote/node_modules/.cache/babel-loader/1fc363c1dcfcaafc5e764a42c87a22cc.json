{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\VoteContainer.js\";\nimport React, { Component } from \"react\";\nimport CreateVote from \"./CreateVote\";\nimport { connect } from \"react-redux\";\nimport { votePostRequest } from \"../../redux/makevote/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass VoteContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handlePost = body => {\n      return this.props.votePostRequest(body).then(() => {\n        if (this.props.postStatus.status === \"SUCCESS\") {\n          console.log(\"sR\");\n          this.props.history.push(\"/\");\n          return true;\n        } else {\n          return false;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CreateVote, {\n        onPost: this.handlePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    postStatus: state.vote.post,\n    userID: state.authentication // isLoggedIn: state.authemtication.status.isLoggedIn\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    votePostRequest: body => {\n      return dispatch(votePostRequest(body));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoteContainer);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/VoteContainer.js"],"names":["React","Component","CreateVote","connect","votePostRequest","VoteContainer","handlePost","body","props","then","postStatus","status","console","log","history","push","render","mapStateToProps","state","vote","post","userID","authentication","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,8BAAhC;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SACpCK,UADoC,GACtBC,IAAD,IAAU;AACrB,aAAO,KAAKC,KAAL,CAAWJ,eAAX,CAA2BG,IAA3B,EAAiCE,IAAjC,CAAsC,MAAM;AACjD,YAAI,KAAKD,KAAL,CAAWE,UAAX,CAAsBC,MAAtB,KAAiC,SAArC,EAAgD;AAC9CC,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEA,eAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,iBAAO,IAAP;AACD,SALD,MAKO;AACL,iBAAO,KAAP;AACD;AACF,OATM,CAAP;AAUD,KAZmC;AAAA;;AAcpCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAE,KAAKV;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AApBmC;;AAuBtC,MAAMW,eAAe,GAAIC,KAAD,IAAW;AACjCN,EAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACA,SAAO;AACLR,IAAAA,UAAU,EAAEQ,KAAK,CAACC,IAAN,CAAWC,IADlB;AAELC,IAAAA,MAAM,EAAEH,KAAK,CAACI,cAFT,CAGL;;AAHK,GAAP;AAKD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,eAAe,EAAGG,IAAD,IAAU;AACzB,aAAOiB,QAAQ,CAACpB,eAAe,CAACG,IAAD,CAAhB,CAAf;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeJ,OAAO,CAACc,eAAD,EAAkBM,kBAAlB,CAAP,CAA6ClB,aAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport CreateVote from \"./CreateVote\";\r\nimport { connect } from \"react-redux\";\r\nimport { votePostRequest } from \"../../redux/makevote/actions\";\r\n\r\nclass VoteContainer extends Component {\r\n  handlePost = (body) => {\r\n    return this.props.votePostRequest(body).then(() => {\r\n      if (this.props.postStatus.status === \"SUCCESS\") {\r\n        console.log(\"sR\");\r\n\r\n        this.props.history.push(\"/\");\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreateVote onPost={this.handlePost} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    postStatus: state.vote.post,\r\n    userID: state.authentication,\r\n    // isLoggedIn: state.authemtication.status.isLoggedIn\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    votePostRequest: (body) => {\r\n      return dispatch(votePostRequest(body));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VoteContainer);\r\n"]},"metadata":{},"sourceType":"module"}