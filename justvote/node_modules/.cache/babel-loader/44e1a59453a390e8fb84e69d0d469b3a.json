{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Authentication from \"./Authentication\";\nimport { connect } from \"react-redux\";\nimport { loginRequest } from \"../../redux/authentication/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = (id, pw) => {\n      return this.props.loginRequest(id, pw).then(() => {\n        console.log(\"this.props.history : \" + this.props.history);\n        console.log(\"this.props.status\" + this.props.status.authentication.login);\n\n        if (this.props.status.authentication.login === \"SUCCESS\") {\n          // create session data\n          let loginData = {\n            isLoggedIn: true,\n            userId: id\n          };\n          document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\n          console.log(\"login-cookie : \" + document.cookie); // 로그인 성공시 루트 화면으로 돌아감.\n\n          this.props.history.push(\"/\");\n          return true;\n        } else {\n          console.log(\"login-cookie-fail\");\n          return false;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Authentication, {\n        onLogin: this.handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"state.status : \" + state.authentication.login.status);\n  return {\n    status: state.status\n  };\n}; //  const mapStateToProps = (state) => {\n//    console.log(\"state.status\" + state.status);\n//    return {\n//      status: state.status,\n//    };\n//  };\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginRequest: (id, pw) => {\n      console.log(\"mapDispatchToProps\");\n      return dispatch(loginRequest(id, pw));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/login/Login.js"],"names":["React","Component","useSelector","Authentication","connect","loginRequest","Login","handleLogin","id","pw","props","then","console","log","history","status","authentication","login","loginData","isLoggedIn","userId","document","cookie","btoa","JSON","stringify","push","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,oCAA7B;;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BM,WAD4B,GACd,CAACC,EAAD,EAAKC,EAAL,KAAY;AACxB,aAAO,KAAKC,KAAL,CAAWL,YAAX,CAAwBG,EAAxB,EAA4BC,EAA5B,EAAgCE,IAAhC,CAAqC,MAAM;AAChDC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0B,KAAKH,KAAL,CAAWI,OAAjD;AAEAF,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsB,KAAKH,KAAL,CAAWK,MAAX,CAAkBC,cAAlB,CAAiCC,KAAnE;;AACA,YAAI,KAAKP,KAAL,CAAWK,MAAX,CAAkBC,cAAlB,CAAiCC,KAAjC,KAA2C,SAA/C,EAA0D;AACxD;AACA,cAAIC,SAAS,GAAG;AACdC,YAAAA,UAAU,EAAE,IADE;AAEdC,YAAAA,MAAM,EAAEZ;AAFM,WAAhB;AAIAa,UAAAA,QAAQ,CAACC,MAAT,GAAkB,SAASC,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAD,CAA/B;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBQ,QAAQ,CAACC,MAAzC,EAPwD,CASxD;;AACA,eAAKZ,KAAL,CAAWI,OAAX,CAAmBY,IAAnB,CAAwB,GAAxB;AACA,iBAAO,IAAP;AACD,SAZD,MAYO;AACLd,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,iBAAO,KAAP;AACD;AACF,OApBM,CAAP;AAqBD,KAvB2B;AAAA;;AAyB5Bc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKpB;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA/B2B;;AAkC9B,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AACjCjB,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBgB,KAAK,CAACb,cAAN,CAAqBC,KAArB,CAA2BF,MAA3D;AACA,SAAO;AACLA,IAAAA,MAAM,EAAEc,KAAK,CAACd;AADT,GAAP;AAGD,CALD,C,CAOA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL1B,IAAAA,YAAY,EAAE,CAACG,EAAD,EAAKC,EAAL,KAAY;AACxBG,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAOkB,QAAQ,CAAC1B,YAAY,CAACG,EAAD,EAAKC,EAAL,CAAb,CAAf;AACD;AAJI,GAAP;AAMD,CAPD;;AASA,eAAeL,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Authentication from \"./Authentication\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"../../redux/authentication/actions\";\r\n\r\nclass Login extends Component {\r\n  handleLogin = (id, pw) => {\r\n    return this.props.loginRequest(id, pw).then(() => {\r\n      console.log(\"this.props.history : \" + this.props.history);\r\n\r\n      console.log(\"this.props.status\" + this.props.status.authentication.login);\r\n      if (this.props.status.authentication.login === \"SUCCESS\") {\r\n        // create session data\r\n        let loginData = {\r\n          isLoggedIn: true,\r\n          userId: id,\r\n        };\r\n        document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n        console.log(\"login-cookie : \" + document.cookie);\r\n\r\n        // 로그인 성공시 루트 화면으로 돌아감.\r\n        this.props.history.push(\"/\");\r\n        return true;\r\n      } else {\r\n        console.log(\"login-cookie-fail\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Authentication onLogin={this.handleLogin} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"state.status : \" + state.authentication.login.status);\r\n  return {\r\n    status: state.status,\r\n  };\r\n};\r\n\r\n//  const mapStateToProps = (state) => {\r\n//    console.log(\"state.status\" + state.status);\r\n//    return {\r\n//      status: state.status,\r\n//    };\r\n//  };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginRequest: (id, pw) => {\r\n      console.log(\"mapDispatchToProps\");\r\n      return dispatch(loginRequest(id, pw));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}