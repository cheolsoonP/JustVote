{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React, { Component } from 'react';\nimport Authentication from './Authentication';\nimport { connect } from 'react-redux';\nimport { loginRequest } from '../../redux/authentication/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogin = (id, pw) => {\n      return this.props.loginRequest(id, pw).then(() => {\n        if (this.props.status === \"SUCCESS\") {\n          // create session data\n          let loginData = {\n            isLoggedIn: true,\n            username: id\n          };\n          document.cookie = 'key=' + btoa(JSON.stringify(loginData));\n          Materialize.toast('Welcome, ' + id + '!', 2000);\n          this.props.history.push('/');\n          return true;\n        } else {\n          let $toastContent = $('<span style=\"color: #FFB4BA\">Incorrect username or password</span>');\n          Materialize.toast($toastContent, 2000);\n          return false;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Authentication, {\n        mode: true,\n        onLogin: this.handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.authentication.login.status\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginRequest: (id, pw) => {\n      return dispatch(loginRequest(id, pw));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/login/Login.js"],"names":["React","Component","Authentication","connect","loginRequest","Login","handleLogin","id","pw","props","then","status","loginData","isLoggedIn","username","document","cookie","btoa","JSON","stringify","Materialize","toast","history","push","$toastContent","$","render","mapStateToProps","state","authentication","login","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,oCAA7B;;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE1BK,WAF0B,GAEZ,CAACC,EAAD,EAAKC,EAAL,KAAY;AACtB,aAAO,KAAKC,KAAL,CAAWL,YAAX,CAAwBG,EAAxB,EAA4BC,EAA5B,EAAgCE,IAAhC,CACH,MAAM;AACF,YAAG,KAAKD,KAAL,CAAWE,MAAX,KAAsB,SAAzB,EAAoC;AAChC;AACA,cAAIC,SAAS,GAAG;AACZC,YAAAA,UAAU,EAAE,IADA;AAEZC,YAAAA,QAAQ,EAAEP;AAFE,WAAhB;AAKAQ,UAAAA,QAAQ,CAACC,MAAT,GAAkB,SAASC,IAAI,CAACC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAAD,CAA/B;AAEAQ,UAAAA,WAAW,CAACC,KAAZ,CAAkB,cAAcd,EAAd,GAAmB,GAArC,EAA0C,IAA1C;AACA,eAAKE,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA,iBAAO,IAAP;AACH,SAZD,MAYO;AACH,cAAIC,aAAa,GAAGC,CAAC,CAAC,oEAAD,CAArB;AACAL,UAAAA,WAAW,CAACC,KAAZ,CAAkBG,aAAlB,EAAiC,IAAjC;AACA,iBAAO,KAAP;AACH;AACJ,OAnBE,CAAP;AAqBH,KAxByB;AAAA;;AA0B1BE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,IAAtB;AACE,QAAA,OAAO,EAAE,KAAKpB;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAjCyB;;AAoC9B,MAAMqB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,MAAM,EAAEiB,KAAK,CAACC,cAAN,CAAqBC,KAArB,CAA2BnB;AADhC,GAAP;AAGH,CAJD;;AAMA,MAAMoB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH5B,IAAAA,YAAY,EAAE,CAACG,EAAD,EAAKC,EAAL,KAAY;AACtB,aAAOwB,QAAQ,CAAC5B,YAAY,CAACG,EAAD,EAAIC,EAAJ,CAAb,CAAf;AACH;AAHE,GAAP;AAKH,CAND;;AASA,eAAeL,OAAO,CAACwB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C1B,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Authentication from './Authentication';\r\nimport { connect } from 'react-redux';\r\nimport { loginRequest } from '../../redux/authentication/actions';\r\n\r\nclass Login extends Component {\r\n\r\n    handleLogin = (id, pw) => {\r\n        return this.props.loginRequest(id, pw).then(\r\n            () => {\r\n                if(this.props.status === \"SUCCESS\") {\r\n                    // create session data\r\n                    let loginData = {\r\n                        isLoggedIn: true,\r\n                        username: id\r\n                    };\r\n\r\n                    document.cookie = 'key=' + btoa(JSON.stringify(loginData));\r\n\r\n                    Materialize.toast('Welcome, ' + id + '!', 2000);\r\n                    this.props.history.push('/');\r\n                    return true;\r\n                } else {\r\n                    let $toastContent = $('<span style=\"color: #FFB4BA\">Incorrect username or password</span>');\r\n                    Materialize.toast($toastContent, 2000);\r\n                    return false;\r\n                }\r\n            }\r\n        );\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Authentication mode={true}\r\n                  onLogin={this.handleLogin}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.authentication.login.status\r\n    };\r\n};\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginRequest: (id, pw) => {\r\n            return dispatch(loginRequest(id,pw));\r\n        }\r\n    };\r\n};\r\n \r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}