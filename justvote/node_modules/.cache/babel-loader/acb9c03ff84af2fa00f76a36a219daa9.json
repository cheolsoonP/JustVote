{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE, DUPLICATE, DUPLICATE_NOT, DUPLICATE_YES } from \"./types\";\n/* DUPLICATE */\n\nexport function duplicateCheckRequest(userID) {\n  return dispatch => {\n    // Inform Register API is starting\n    dispatch(duplicateCheck());\n    return axios.post(\"http://localhost:8080/duplicateCheck\", userID).then(response => {\n      // useable this userID\n      dispatch(duplicateNot());\n    }).catch(error => {\n      // request change userID\n      dispatch(duplicateYes());\n    });\n  };\n}\nexport function duplicateCheck() {\n  return {\n    type: DUPLICATE\n  };\n}\nexport function duplicateNot() {\n  return {\n    type: DUPLICATE_NOT\n  };\n}\nexport function duplicateYes() {\n  return {\n    type: DUPLICATE_YES\n  };\n}\n/* REGISTER */\n\nexport function registerRequest(body) {\n  return dispatch => {\n    // Inform Register API is starting\n    dispatch(register());\n    console.log(body);\n    return axios.post(\"http://localhost:8080/register\", body).then(response => {\n      // SUCCEED\n      dispatch(registerSuccess());\n    }).catch(error => {\n      dispatch(registerFailure());\n    });\n  };\n}\nexport function register() {\n  return {\n    type: REGISTER\n  };\n}\nexport function registerSuccess() {\n  return {\n    type: REGISTER_SUCCESS\n  };\n}\nexport function registerFailure() {\n  return {\n    type: REGISTER_FAILURE\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/signup/actions.js"],"names":["axios","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","DUPLICATE","DUPLICATE_NOT","DUPLICATE_YES","duplicateCheckRequest","userID","dispatch","duplicateCheck","post","then","response","duplicateNot","catch","error","duplicateYes","type","registerRequest","body","register","console","log","registerSuccess","registerFailure"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,QADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,SAJF,EAKEC,aALF,EAMEC,aANF,QAOO,SAPP;AASA;;AAEA,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AAC5C,SAAQC,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACC,cAAc,EAAf,CAAR;AAEA,WAAOV,KAAK,CACTW,IADI,CACC,sCADD,EACyCH,MADzC,EAEJI,IAFI,CAEEC,QAAD,IAAc;AAClB;AACAJ,MAAAA,QAAQ,CAACK,YAAY,EAAb,CAAR;AACD,KALI,EAMJC,KANI,CAMGC,KAAD,IAAW;AAChB;AACAP,MAAAA,QAAQ,CAACQ,YAAY,EAAb,CAAR;AACD,KATI,CAAP;AAUD,GAdD;AAeD;AAED,OAAO,SAASP,cAAT,GAA0B;AAC/B,SAAO;AACLQ,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD;AAED,OAAO,SAASU,YAAT,GAAwB;AAC7B,SAAO;AACLI,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD;AAED,OAAO,SAASY,YAAT,GAAwB;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAASa,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAQX,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACY,QAAQ,EAAT,CAAR;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAOpB,KAAK,CACTW,IADI,CACC,gCADD,EACmCS,IADnC,EAEJR,IAFI,CAEEC,QAAD,IAAc;AAClB;AACAJ,MAAAA,QAAQ,CAACe,eAAe,EAAhB,CAAR;AACD,KALI,EAMJT,KANI,CAMGC,KAAD,IAAW;AAChBP,MAAAA,QAAQ,CAACgB,eAAe,EAAhB,CAAR;AACD,KARI,CAAP;AASD,GAfD;AAgBD;AAED,OAAO,SAASJ,QAAT,GAAoB;AACzB,SAAO;AACLH,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD;AAED,OAAO,SAASuB,eAAT,GAA2B;AAChC,SAAO;AACLN,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD;AAED,OAAO,SAASuB,eAAT,GAA2B;AAChC,SAAO;AACLP,IAAAA,IAAI,EAAEf;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  REGISTER,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAILURE,\r\n  DUPLICATE,\r\n  DUPLICATE_NOT,\r\n  DUPLICATE_YES,\r\n} from \"./types\";\r\n\r\n/* DUPLICATE */\r\n\r\nexport function duplicateCheckRequest(userID) {\r\n  return (dispatch) => {\r\n    // Inform Register API is starting\r\n    dispatch(duplicateCheck());\r\n\r\n    return axios\r\n      .post(\"http://localhost:8080/duplicateCheck\", userID)\r\n      .then((response) => {\r\n        // useable this userID\r\n        dispatch(duplicateNot());\r\n      })\r\n      .catch((error) => {\r\n        // request change userID\r\n        dispatch(duplicateYes());\r\n      });\r\n  };\r\n}\r\n\r\nexport function duplicateCheck() {\r\n  return {\r\n    type: DUPLICATE,\r\n  };\r\n}\r\n\r\nexport function duplicateNot() {\r\n  return {\r\n    type: DUPLICATE_NOT,\r\n  };\r\n}\r\n\r\nexport function duplicateYes() {\r\n  return {\r\n    type: DUPLICATE_YES,\r\n  };\r\n}\r\n\r\n/* REGISTER */\r\nexport function registerRequest(body) {\r\n  return (dispatch) => {\r\n    // Inform Register API is starting\r\n    dispatch(register());\r\n\r\n    console.log(body);\r\n\r\n    return axios\r\n      .post(\"http://localhost:8080/register\", body)\r\n      .then((response) => {\r\n        // SUCCEED\r\n        dispatch(registerSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(registerFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function register() {\r\n  return {\r\n    type: REGISTER,\r\n  };\r\n}\r\n\r\nexport function registerSuccess() {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function registerFailure() {\r\n  return {\r\n    type: REGISTER_FAILURE,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}