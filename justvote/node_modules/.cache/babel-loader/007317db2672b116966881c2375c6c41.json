{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\ranking\\\\Ranking.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport './ranking.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'rank',\n  label: 'Rank',\n  minWidth: 100\n}, {\n  id: 'title',\n  label: 'Title',\n  minWidth: 170\n}, {\n  id: 'user',\n  label: 'user',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'hit',\n  label: 'hit',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(rank, title, user, hit) {\n  return {\n    rank,\n    title,\n    user,\n    hit\n  };\n}\n\nconst rows = [createData(1, '투표1', '김시우', 123), createData(2, '투표2', '조소망', 121), createData(3, '투표3', '박철순', 120), createData(4, '투표 4', '김정원', 114), createData(5, '투표 5', '이상민', 110), createData(6, '투표 6', '이우진', 106), createData(7, '투표 7', '계대환', 104), createData(8, '투표 8', '윤준서', 100), createData(9, ''), createData(10, '')];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 700\n  }\n});\nexport default function StickyHeadTable() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/ranking/Ranking.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","rank","title","user","hit","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport './ranking.css';\r\n\r\nconst columns = [\r\n  { id: 'rank', label: 'Rank', minWidth: 100 },\r\n  { id: 'title', label: 'Title', minWidth: 170 },\r\n\r\n  {\r\n    id: 'user',\r\n    label: 'user',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'hit',\r\n    label: 'hit',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\nfunction createData(rank ,title, user, hit) {\r\n  return { rank, title, user, hit };\r\n}\r\n\r\nconst rows = [\r\n  createData(1, '투표1', '김시우', 123),\r\n  createData(2, '투표2', '조소망', 121),\r\n  createData(3, '투표3', '박철순', 120),\r\n  createData(4, '투표 4', '김정원', 114),\r\n  createData(5, '투표 5', '이상민', 110),\r\n  createData(6, '투표 6', '이우진', 106),\r\n  createData(7, '투표 7', '계대환', 104),\r\n  createData(8, '투표 8', '윤준서', 100),\r\n  createData(9, '',),\r\n  createData(10, '',),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 700,\r\n  },\r\n});\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}