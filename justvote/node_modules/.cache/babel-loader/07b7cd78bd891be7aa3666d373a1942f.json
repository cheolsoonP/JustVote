{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE } from \"./types\";\n/* REGISTER */\n\nexport function registerRequest(body) {\n  return dispatch => {\n    // Inform Register API is starting\n    dispatch(register());\n    return axios.post(\"http://localhost:8080/register\", body).then(response => {\n      // SUCCEED\n      dispatch(registerSuccess());\n    }).catch(error => {\n      dispatch(registerFailure());\n    });\n  };\n}\nexport function register() {\n  return {\n    type: REGISTER\n  };\n}\nexport function registerSuccess() {\n  return {\n    type: REGISTER_SUCCESS\n  };\n}\nexport function registerFailure() {\n  return {\n    type: REGISTER_FAILURE\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/signup/actions.js"],"names":["axios","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","registerRequest","body","dispatch","register","post","then","response","registerSuccess","catch","error","registerFailure","type"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,gBAArC,QAA6D,SAA7D;AAEA;;AACA,OAAO,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAQC,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACC,QAAQ,EAAT,CAAR;AAEA,WAAOP,KAAK,CACTQ,IADI,CACC,gCADD,EACmCH,IADnC,EAEJI,IAFI,CAEEC,QAAD,IAAc;AAClB;AACAJ,MAAAA,QAAQ,CAACK,eAAe,EAAhB,CAAR;AACD,KALI,EAMJC,KANI,CAMGC,KAAD,IAAW;AAChBP,MAAAA,QAAQ,CAACQ,eAAe,EAAhB,CAAR;AACD,KARI,CAAP;AASD,GAbD;AAcD;AAED,OAAO,SAASP,QAAT,GAAoB;AACzB,SAAO;AACLQ,IAAAA,IAAI,EAAEd;AADD,GAAP;AAGD;AAED,OAAO,SAASU,eAAT,GAA2B;AAChC,SAAO;AACLI,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD;AAED,OAAO,SAASY,eAAT,GAA2B;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\r\nimport { REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE } from \"./types\";\r\n\r\n/* REGISTER */\r\nexport function registerRequest(body) {\r\n  return (dispatch) => {\r\n    // Inform Register API is starting\r\n    dispatch(register());\r\n\r\n    return axios\r\n      .post(\"http://localhost:8080/register\", body)\r\n      .then((response) => {\r\n        // SUCCEED\r\n        dispatch(registerSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(registerFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function register() {\r\n  return {\r\n    type: REGISTER,\r\n  };\r\n}\r\n\r\nexport function registerSuccess() {\r\n  return {\r\n    type: REGISTER_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function registerFailure() {\r\n  return {\r\n    type: REGISTER_FAILURE,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}