{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\VotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as RBS from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getVotes, registerCommentRequest, setVotesRequest } from \"../redux\";\nimport testImage from \"../img/content_img.png\"; // material import\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\n\nfunction VotePage({\n  getVotes,\n  loading,\n  items,\n  userId,\n  registerCommentRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    getVotes();\n  }, []);\n  const [select, setSelect] = useState();\n  let contName;\n\n  const onChange = ({\n    target\n  }) => {\n    setSelect(select);\n    target.name = target.value;\n    contName = target.value;\n  };\n\n  console.log(items[0]); // let items_2 = JSON.stringify(items)\n  // console.log(items_2)\n  // let items_3 = JSON.parse(items_2)\n  // console.log(items_3)\n\n  let voteID = [];\n  let voteTitle = [];\n  let voteRegDate = [];\n  let voteHits = [];\n  let selecID = [];\n  let selecContent = [];\n  let selecHits = []; //데이터 받기\n\n  const voteItems = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"is loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this) : items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      visibility: \"hidden\"\n    },\n    children: (selecContent.push(item.selecContent), selecID.push(item.selecID), selecHits.push(item.selcHits), voteID.push(item.voteID), voteTitle.push(item.voteTitle), voteRegDate.push(item.voteRegDate), voteHits.push(item.voteHits))\n  }, item.voteID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this));\n  console.log(voteTitle); //파라미터\n\n  const {\n    nam\n  } = useParams();\n  const selectContent = selecContent.shift(); // 투표화면 상단\n\n  function VoteTop() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VotePage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: voteTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"title\",\n        children: [voteRegDate[0], \" | \", voteHits, \"\\uBA85\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RBS.Col, {\n        xs: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(RBS.Image, {\n          src: testImage,\n          rounded: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n  let indexx = 0;\n\n  const handleCheck = e => {\n    console.log(e.target.key);\n    indexx = e.target.key;\n  }; //Contents에 관한 부분\n\n\n  function contentList() {\n    let P = []; // for (let i = 1; i < selecContent.length; i++) {\n    //   P.push((selecHits[i] / voteHits[0]) * 100);\n    //   P[i] = P[i].toFixed(2);\n    // }\n\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"select\",\n        name: \"select\",\n        value: select,\n        onChange: e => onChange(e),\n        children: selecContent.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: item,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 24\n          }, this) //             onClick={() => handleCheck()}\n          ,\n          label: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  } // 댓글 등록\n\n\n  const [comment, setComment] = useState(\"\");\n\n  const handleChange = e => {\n    setComment(e.target.value);\n  };\n\n  const handleRegister = e => {\n    let body = {\n      userId: userId,\n      comment: comment //contentTitle: contentTitle,\n\n    };\n    console.log(body);\n    registerCommentRequest(body).then(() => {// push해줌\n    }); // comment 등록하면 빈칸으로\n  }; // 댓글 삭제\n\n\n  const handelDeleteComment = e => {\n    let body = {\n      userId: userId //댓글 번호?\n      //contentTitle: contentTitle,\n\n    };\n  };\n\n  const handleSet = e => {\n    let body = {\n      voteID: voteID[0],\n      selecContent: contName,\n      userID: userId\n    };\n    setVotesRequest(body);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VotePage\",\n    children: [/*#__PURE__*/_jsxDEV(RBS.Container, {\n      children: /*#__PURE__*/_jsxDEV(RBS.Row, {\n        children: [/*#__PURE__*/_jsxDEV(RBS.Col, {\n          children: /*#__PURE__*/_jsxDEV(VoteTop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RBS.Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RBS.Col, {\n      children: contentList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RBS.Col, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: useStyles.submit,\n        onClick: handleSet,\n        children: \"\\uD22C\\uD45C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: useStyles.root,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-full-width\",\n          label: \"userId\",\n          style: {\n            margin: 8\n          },\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          },\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: useStyles.submit,\n          onClick: handleRegister,\n          children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"votes\",\n      children: voteItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VotePage, \"h0VaCvZVA/mt2Vcagz0CrJrssH4=\", false, function () {\n  return [useParams];\n});\n\n_c = VotePage;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    userId: state.authentication.status.currentUser,\n    items: state.votes.get.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getVotes: () => {\n      return dispatch(getVotes());\n    },\n    registerCommentRequest: body => {\n      return dispatch(registerCommentRequest(body));\n    },\n    setVotesRequest: body => {\n      return dispatch(setVotesRequest(body));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"VotePage\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/VotePage.js"],"names":["React","useEffect","useState","RBS","useParams","connect","getVotes","registerCommentRequest","setVotesRequest","testImage","makeStyles","TextField","Button","FormControlLabel","FormControl","FormLabel","Radio","RadioGroup","useStyles","theme","root","margin","spacing","width","VotePage","loading","items","userId","select","setSelect","contName","onChange","target","name","value","console","log","voteID","voteTitle","voteRegDate","voteHits","selecID","selecContent","selecHits","voteItems","map","item","visibility","push","selcHits","nam","selectContent","shift","VoteTop","indexx","handleCheck","e","key","contentList","P","index","comment","setComment","handleChange","handleRegister","body","then","handelDeleteComment","handleSet","userID","submit","shrink","mapStateToProps","state","authentication","status","currentUser","votes","get","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getVotes, registerCommentRequest, setVotesRequest } from \"../redux\";\r\nimport testImage from \"../img/content_img.png\";\r\n\r\n// material import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction VotePage({\r\n  getVotes,\r\n  loading,\r\n  items,\r\n  userId,\r\n  registerCommentRequest,\r\n}) {\r\n  useEffect(() => {\r\n    getVotes();\r\n  }, []);\r\n\r\n  const [select, setSelect] = useState();\r\n  let contName;\r\n\r\n  const onChange = ({ target }) => {\r\n    setSelect(select);\r\n    target.name = target.value;\r\n    contName = target.value;\r\n  };\r\n  console.log(items[0]);\r\n  // let items_2 = JSON.stringify(items)\r\n  // console.log(items_2)\r\n  // let items_3 = JSON.parse(items_2)\r\n  // console.log(items_3)\r\n\r\n  let voteID = [];\r\n  let voteTitle = [];\r\n  let voteRegDate = [];\r\n  let voteHits = [];\r\n  let selecID = [];\r\n  let selecContent = [];\r\n  let selecHits = [];\r\n\r\n  //데이터 받기\r\n  const voteItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    items.map((item) => (\r\n      <div key={item.voteID} style={{ visibility: \"hidden\" }}>\r\n        {\r\n          (selecContent.push(item.selecContent),\r\n          selecID.push(item.selecID),\r\n          selecHits.push(item.selcHits),\r\n          voteID.push(item.voteID),\r\n          voteTitle.push(item.voteTitle),\r\n          voteRegDate.push(item.voteRegDate),\r\n          voteHits.push(item.voteHits))\r\n        }\r\n      </div>\r\n    ))\r\n  );\r\n  console.log(voteTitle);\r\n  //파라미터\r\n  const { nam } = useParams();\r\n  const selectContent = selecContent.shift();\r\n  // 투표화면 상단\r\n  function VoteTop() {\r\n    return (\r\n      <div className=\"VotePage\">\r\n        <h1 className=\"title\">{voteTitle}</h1>\r\n        <h5 className=\"title\">\r\n          {voteRegDate[0]} | {voteHits}명\r\n        </h5>\r\n        <RBS.Col xs={6} md={4}>\r\n          {/* ../public/content_img.png 이라고 해도 되지만 위치몰라도 고를 수 있는걸 보여주고 싶었음*/}\r\n          <RBS.Image src={testImage} rounded />\r\n        </RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n  let indexx = 0;\r\n  const handleCheck = (e) => {\r\n    console.log(e.target.key);\r\n    indexx = e.target.key;\r\n  };\r\n  //Contents에 관한 부분\r\n  function contentList() {\r\n    let P = [];\r\n    // for (let i = 1; i < selecContent.length; i++) {\r\n    //   P.push((selecHits[i] / voteHits[0]) * 100);\r\n    //   P[i] = P[i].toFixed(2);\r\n    // }\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\"></FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"select\"\r\n          name=\"select\"\r\n          value={select}\r\n          onChange={(e) => onChange(e)}\r\n        >\r\n          {selecContent.map((item, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={item}\r\n              control={<Radio />}\r\n              //             onClick={() => handleCheck()}\r\n              label={item}\r\n            ></FormControlLabel>\r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  // 댓글 등록\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    let body = {\r\n      userId: userId,\r\n      comment: comment,\r\n      //contentTitle: contentTitle,\r\n    };\r\n\r\n    console.log(body);\r\n    registerCommentRequest(body).then(() => {\r\n      // push해줌\r\n    });\r\n    // comment 등록하면 빈칸으로\r\n  };\r\n\r\n  // 댓글 삭제\r\n  const handelDeleteComment = (e) => {\r\n    let body = {\r\n      userId: userId,\r\n      //댓글 번호?\r\n      //contentTitle: contentTitle,\r\n    };\r\n  };\r\n\r\n  const handleSet = (e) => {\r\n    let body = {\r\n      voteID: voteID[0],\r\n      selecContent: contName,\r\n      userID: userId,\r\n    };\r\n\r\n    setVotesRequest(body);\r\n  };\r\n\r\n  return (\r\n    <div className=\"VotePage\">\r\n      <RBS.Container>\r\n        <RBS.Row>\r\n          <RBS.Col>\r\n            <VoteTop></VoteTop>\r\n          </RBS.Col>\r\n          <RBS.Col></RBS.Col>\r\n        </RBS.Row>\r\n      </RBS.Container>\r\n      <RBS.Col>{contentList()}</RBS.Col>\r\n      <RBS.Col>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={useStyles.submit}\r\n          onClick={handleSet}\r\n        >\r\n          투표!\r\n        </Button>\r\n      </RBS.Col>\r\n      <div>\r\n        <form className={useStyles.root}>\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            label=\"userId\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"댓글을 입력하세요.\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={useStyles.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            등록하기\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div class=\"votes\">{voteItems}</div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    items: state.votes.get.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getVotes: () => {\r\n      return dispatch(getVotes());\r\n    },\r\n    registerCommentRequest: (body) => {\r\n      return dispatch(registerCommentRequest(body));\r\n    },\r\n    setVotesRequest: (body) => {\r\n      return dispatch(setVotesRequest(body));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePage);\r\n"]},"metadata":{},"sourceType":"module"}