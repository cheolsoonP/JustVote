{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\VotePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as RBS from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getVotes, registerCommentRequest, setVotesRequest } from \"../redux\";\nimport testImage from \"../img/content_img.png\"; // material import\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\n\nfunction VotePage({\n  getVotes,\n  loading,\n  items,\n  userId,\n  registerCommentRequest\n}) {\n  _s();\n\n  useEffect(() => {\n    getVotes();\n  }, []);\n  const [gender, setGender] = useState();\n\n  const onChange = ({\n    target\n  }) => {\n    setGender(gender);\n    target.name = target.value;\n  };\n\n  const voteItems = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"is loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) :\n  /*#__PURE__*/\n  // items.map(vote => (\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: items.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: items.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: items.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, items.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this) // ))\n  ; //투표객체\n\n  class Test {\n    constructor(name, date, voter, content, chosen) {\n      this.name = name;\n      this.date = date;\n      this.voter = voter;\n      this.content = content;\n      this.chosen = chosen;\n    }\n\n  } //투표객체 생성\n\n\n  let test = new Test(\"제목\", \"날짜\", \"1500\", [\"추억과 김밥\", \"밀알 식당\", \"논두렁 갈비\"], [300, 500, 700]); //파라미터\n\n  const {\n    nam\n  } = useParams(); //투표화면 상단\n\n  function VoteTop() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VotePage\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [test.name, nam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"title\",\n        children: [test.date, \" | \", test.voter, \"\\uBA85\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RBS.Col, {\n        xs: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(RBS.Image, {\n          src: testImage,\n          rounded: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  } //Contents에 관한 부분\n\n\n  function contentList() {\n    var P = [];\n\n    for (var i = 0; i < test.content.length; i++) {\n      P.push(test.chosen[i] / test.voter * 100);\n      P[i] = P[i].toFixed(2);\n    }\n\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"Gender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n        \"aria-label\": \"gender\",\n        name: \"gender\",\n        value: gender,\n        onChange: e => onChange(e),\n        children: test.content.map((item, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          value: item,\n          control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 24\n          }, this),\n          label: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  } // 댓글 등록\n\n\n  const [comment, setComment] = useState(\"\");\n\n  const handleChange = e => {\n    setComment(e.target.value);\n  };\n\n  const handleRegister = e => {\n    let body = {\n      userId: userId,\n      comment: comment //contentTitle: contentTitle,\n\n    };\n    console.log(body);\n    registerCommentRequest(body).then(() => {// push해줌\n    }); // comment 등록하면 빈칸으로\n  }; // 댓글 삭제\n\n\n  const handelDeleteComment = e => {\n    let body = {\n      userId: userId //댓글 번호?\n      //contentTitle: contentTitle,\n\n    };\n  }; // setvote\n\n\n  const setVotesRequest = e => {\n    let body = {\n      userId: userId,\n      comment: comment //contentTitle: contentTitle,\n\n    };\n    console.log(body);\n    registerCommentRequest(body).then(() => {// push해줌\n    }); // comment 등록하면 빈칸으로\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"VotePage\",\n    children: [/*#__PURE__*/_jsxDEV(RBS.Container, {\n      children: /*#__PURE__*/_jsxDEV(RBS.Row, {\n        children: [/*#__PURE__*/_jsxDEV(RBS.Col, {\n          children: /*#__PURE__*/_jsxDEV(VoteTop, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RBS.Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), contentList(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: useStyles.root,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-full-width\",\n          label: \"userId\",\n          style: {\n            margin: 8\n          },\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n          fullWidth: true,\n          margin: \"normal\",\n          InputLabelProps: {\n            shrink: true\n          },\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: useStyles.submit,\n          onClick: handleRegister,\n          children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"votes\",\n      children: voteItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n\n_s(VotePage, \"iuxDC82gsj9OX53+L9ZiglFMFjQ=\", false, function () {\n  return [useParams];\n});\n\n_c = VotePage;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    userId: state.authentication.status.currentUser,\n    items: state.votes.items\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getVotes: () => {\n      return dispatch(getVotes());\n    },\n    registerCommentRequest: body => {\n      return dispatch(registerCommentRequest(body));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePage);\n\nvar _c;\n\n$RefreshReg$(_c, \"VotePage\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/VotePage.js"],"names":["React","useEffect","useState","RBS","useParams","connect","getVotes","registerCommentRequest","setVotesRequest","testImage","makeStyles","TextField","Button","FormControlLabel","FormControl","FormLabel","Radio","RadioGroup","useStyles","theme","root","margin","spacing","width","VotePage","loading","items","userId","gender","setGender","onChange","target","name","value","voteItems","email","body","id","Test","constructor","date","voter","content","chosen","test","nam","VoteTop","contentList","P","i","length","push","toFixed","e","map","item","index","comment","setComment","handleChange","handleRegister","console","log","then","handelDeleteComment","shrink","submit","mapStateToProps","state","authentication","status","currentUser","votes","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,sBAAnB,EAA2CC,eAA3C,QAAkE,UAAlE;AACA,OAAOC,SAAP,MAAsB,wBAAtB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADL;AADiC,CAAZ,CAAD,CAA5B;;AASA,SAASC,QAAT,CAAkB;AAChBlB,EAAAA,QADgB;AAEhBmB,EAAAA,OAFgB;AAGhBC,EAAAA,KAHgB;AAIhBC,EAAAA,MAJgB;AAKhBpB,EAAAA;AALgB,CAAlB,EAMG;AAAA;;AACDN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACsB,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,EAApC;;AAEA,QAAM4B,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC/BF,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,MAAM,CAACC,IAAP,GAAcD,MAAM,CAACE,KAArB;AACD,GAHD;;AAKA,QAAMC,SAAS,GAAGT,OAAO,gBACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADuB;AAAA;AAGvB;AACA;AAAA,4BACE;AAAA,gBAAKC,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIN,KAAK,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAIT,KAAK,CAACU;AAAV;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,KAAUV,KAAK,CAACW,EAAhB;AAAA;AAAA;AAAA;AAAA,UAJuB,CASvB;AATF,GAZC,CAwBD;;AACA,QAAMC,IAAN,CAAW;AACTC,IAAAA,WAAW,CAACP,IAAD,EAAOQ,IAAP,EAAaC,KAAb,EAAoBC,OAApB,EAA6BC,MAA7B,EAAqC;AAC9C,WAAKX,IAAL,GAAYA,IAAZ;AACA,WAAKQ,IAAL,GAAYA,IAAZ;AACA,WAAKC,KAAL,GAAaA,KAAb;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA,WAAKC,MAAL,GAAcA,MAAd;AACD;;AAPQ,GAzBV,CAkCD;;;AACA,MAAIC,IAAI,GAAG,IAAIN,IAAJ,CACT,IADS,EAET,IAFS,EAGT,MAHS,EAIT,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAJS,EAKT,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CALS,CAAX,CAnCC,CA0CD;;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAUzC,SAAS,EAAzB,CA3CC,CA6CD;;AACA,WAAS0C,OAAT,GAAmB;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,mBACGF,IAAI,CAACZ,IADR,EAEGa,GAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,mBACGD,IAAI,CAACJ,IADR,SACiBI,IAAI,CAACH,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQE,QAAC,GAAD,CAAK,GAAL;AAAS,QAAA,EAAE,EAAE,CAAb;AAAgB,QAAA,EAAE,EAAE,CAApB;AAAA,+BAEE,QAAC,GAAD,CAAK,KAAL;AAAW,UAAA,GAAG,EAAEhC,SAAhB;AAA2B,UAAA,OAAO;AAAlC;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GA9DA,CA+DD;;;AACA,WAASsC,WAAT,GAAuB;AACrB,QAAIC,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACF,OAAL,CAAaQ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,MAAAA,CAAC,CAACG,IAAF,CAAQP,IAAI,CAACD,MAAL,CAAYM,CAAZ,IAAiBL,IAAI,CAACH,KAAvB,GAAgC,GAAvC;AACAO,MAAAA,CAAC,CAACC,CAAD,CAAD,GAAOD,CAAC,CAACC,CAAD,CAAD,CAAKG,OAAL,CAAa,CAAb,CAAP;AACD;;AACD,wBACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,sBAAW,QADb;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAExB,MAHT;AAIE,QAAA,QAAQ,EAAGyB,CAAD,IAAOvB,QAAQ,CAACuB,CAAD,CAJ3B;AAAA,kBAMGT,IAAI,CAACF,OAAL,CAAaY,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB,QAAC,gBAAD;AAEE,UAAA,KAAK,EAAED,IAFT;AAGE,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAHX;AAIE,UAAA,KAAK,EAAEA;AAJT,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADD;AANH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GA1FA,CA4FD;;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBxD,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMyD,YAAY,GAAIN,CAAD,IAAO;AAC1BK,IAAAA,UAAU,CAACL,CAAC,CAACtB,MAAF,CAASE,KAAV,CAAV;AACD,GAFD;;AAIA,QAAM2B,cAAc,GAAIP,CAAD,IAAO;AAC5B,QAAIjB,IAAI,GAAG;AACTT,MAAAA,MAAM,EAAEA,MADC;AAET8B,MAAAA,OAAO,EAAEA,OAFA,CAGT;;AAHS,KAAX;AAMAI,IAAAA,OAAO,CAACC,GAAR,CAAY1B,IAAZ;AACA7B,IAAAA,sBAAsB,CAAC6B,IAAD,CAAtB,CAA6B2B,IAA7B,CAAkC,MAAM,CACtC;AACD,KAFD,EAR4B,CAW5B;AACD,GAZD,CAnGC,CAiHD;;;AACA,QAAMC,mBAAmB,GAAIX,CAAD,IAAO;AACjC,QAAIjB,IAAI,GAAG;AACTT,MAAAA,MAAM,EAAEA,MADC,CAET;AACA;;AAHS,KAAX;AAKD,GAND,CAlHC,CA0HD;;;AACA,QAAMnB,eAAe,GAAI6C,CAAD,IAAO;AAC7B,QAAIjB,IAAI,GAAG;AACTT,MAAAA,MAAM,EAAEA,MADC;AAET8B,MAAAA,OAAO,EAAEA,OAFA,CAGT;;AAHS,KAAX;AAMAI,IAAAA,OAAO,CAACC,GAAR,CAAY1B,IAAZ;AACA7B,IAAAA,sBAAsB,CAAC6B,IAAD,CAAtB,CAA6B2B,IAA7B,CAAkC,MAAM,CACtC;AACD,KAFD,EAR6B,CAW7B;AACD,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE,QAAC,GAAD,CAAK,SAAL;AAAA,6BACE,QAAC,GAAD,CAAK,GAAL;AAAA,gCACE,QAAC,GAAD,CAAK,GAAL;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD,CAAK,GAAL;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EASGhB,WAAW,EATd,eAUE;AAAA,6BACE;AAAM,QAAA,SAAS,EAAE7B,SAAS,CAACE,IAA3B;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,qBADL;AAEE,UAAA,KAAK,EAAC,QAFR;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAHT;AAIE,UAAA,WAAW,EAAC,oDAJd;AAKE,UAAA,SAAS,MALX;AAME,UAAA,MAAM,EAAC,QANT;AAOE,UAAA,eAAe,EAAE;AACf4C,YAAAA,MAAM,EAAE;AADO,WAPnB;AAUE,UAAA,QAAQ,EAAEN;AAVZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,SAAS,EAAEzC,SAAS,CAACgD,MAHvB;AAIE,UAAA,OAAO,EAAEN,cAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAkCE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,gBAAoB1B;AAApB;AAAA;AAAA;AAAA;AAAA,YAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GArLQV,Q;UAiDSpB,S;;;KAjDToB,Q;;AAsLT,MAAM2C,eAAe,GAAIC,KAAD,IAAW;AACjCP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACA,SAAO;AACLzC,IAAAA,MAAM,EAAEyC,KAAK,CAACC,cAAN,CAAqBC,MAArB,CAA4BC,WAD/B;AAEL7C,IAAAA,KAAK,EAAE0C,KAAK,CAACI,KAAN,CAAY9C;AAFd,GAAP;AAID,CAND;;AAQA,MAAM+C,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpE,IAAAA,QAAQ,EAAE,MAAM;AACd,aAAOoE,QAAQ,CAACpE,QAAQ,EAAT,CAAf;AACD,KAHI;AAILC,IAAAA,sBAAsB,EAAG6B,IAAD,IAAU;AAChC,aAAOsC,QAAQ,CAACnE,sBAAsB,CAAC6B,IAAD,CAAvB,CAAf;AACD;AANI,GAAP;AAQD,CATD;;AAUA,eAAe/B,OAAO,CAAC8D,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CjD,QAA7C,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getVotes, registerCommentRequest, setVotesRequest } from \"../redux\";\r\nimport testImage from \"../img/content_img.png\";\r\n\r\n// material import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction VotePage({\r\n  getVotes,\r\n  loading,\r\n  items,\r\n  userId,\r\n  registerCommentRequest,\r\n}) {\r\n  useEffect(() => {\r\n    getVotes();\r\n  }, []);\r\n\r\n  const [gender, setGender] = useState();\r\n\r\n  const onChange = ({ target }) => {\r\n    setGender(gender);\r\n    target.name = target.value;\r\n  };\r\n\r\n  const voteItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    // items.map(vote => (\r\n    <div key={items.id}>\r\n      <h3>{items.name}</h3>\r\n      <p>{items.email}</p>\r\n      <p>{items.body}</p>\r\n    </div>\r\n    // ))\r\n  );\r\n\r\n  //투표객체\r\n  class Test {\r\n    constructor(name, date, voter, content, chosen) {\r\n      this.name = name;\r\n      this.date = date;\r\n      this.voter = voter;\r\n      this.content = content;\r\n      this.chosen = chosen;\r\n    }\r\n  }\r\n  //투표객체 생성\r\n  let test = new Test(\r\n    \"제목\",\r\n    \"날짜\",\r\n    \"1500\",\r\n    [\"추억과 김밥\", \"밀알 식당\", \"논두렁 갈비\"],\r\n    [300, 500, 700]\r\n  );\r\n  //파라미터\r\n  const { nam } = useParams();\r\n\r\n  //투표화면 상단\r\n  function VoteTop() {\r\n    return (\r\n      <div className=\"VotePage\">\r\n        <h1 className=\"title\">\r\n          {test.name}\r\n          {nam}\r\n        </h1>\r\n        <h5 className=\"title\">\r\n          {test.date} | {test.voter}명\r\n        </h5>\r\n        <RBS.Col xs={6} md={4}>\r\n          {/* ../public/content_img.png 이라고 해도 되지만 위치몰라도 고를 수 있는걸 보여주고 싶었음*/}\r\n          <RBS.Image src={testImage} rounded />\r\n        </RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n  //Contents에 관한 부분\r\n  function contentList() {\r\n    var P = [];\r\n    for (var i = 0; i < test.content.length; i++) {\r\n      P.push((test.chosen[i] / test.voter) * 100);\r\n      P[i] = P[i].toFixed(2);\r\n    }\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"gender\"\r\n          name=\"gender\"\r\n          value={gender}\r\n          onChange={(e) => onChange(e)}\r\n        >\r\n          {test.content.map((item, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={item}\r\n              control={<Radio />}\r\n              label={item}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  // 댓글 등록\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    let body = {\r\n      userId: userId,\r\n      comment: comment,\r\n      //contentTitle: contentTitle,\r\n    };\r\n\r\n    console.log(body);\r\n    registerCommentRequest(body).then(() => {\r\n      // push해줌\r\n    });\r\n    // comment 등록하면 빈칸으로\r\n  };\r\n\r\n  // 댓글 삭제\r\n  const handelDeleteComment = (e) => {\r\n    let body = {\r\n      userId: userId,\r\n      //댓글 번호?\r\n      //contentTitle: contentTitle,\r\n    };\r\n  };\r\n\r\n  // setvote\r\n  const setVotesRequest = (e) => {\r\n    let body = {\r\n      userId: userId,\r\n      comment: comment,\r\n      //contentTitle: contentTitle,\r\n    };\r\n\r\n    console.log(body);\r\n    registerCommentRequest(body).then(() => {\r\n      // push해줌\r\n    });\r\n    // comment 등록하면 빈칸으로\r\n  };\r\n\r\n  return (\r\n    <div className=\"VotePage\">\r\n      <RBS.Container>\r\n        <RBS.Row>\r\n          <RBS.Col>\r\n            <VoteTop></VoteTop>\r\n          </RBS.Col>\r\n          <RBS.Col></RBS.Col>\r\n        </RBS.Row>\r\n      </RBS.Container>\r\n      {contentList()}\r\n      <div>\r\n        <form className={useStyles.root}>\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            label=\"userId\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"댓글을 입력하세요.\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={useStyles.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            등록하기\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div class=\"votes\">{voteItems}</div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    items: state.votes.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getVotes: () => {\r\n      return dispatch(getVotes());\r\n    },\r\n    registerCommentRequest: (body) => {\r\n      return dispatch(registerCommentRequest(body));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePage);\r\n"]},"metadata":{},"sourceType":"module"}