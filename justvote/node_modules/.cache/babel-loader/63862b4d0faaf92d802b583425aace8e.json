{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\mainHome\\\\MainHome.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as RBS from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getMainRequest } from \"../../redux\";\nimport Subbar from \"../Subbar\";\nimport MediaCard from \"../MediaCard\"; // material import\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\n\nfunction MainHome({\n  getMainRequest,\n  contentList,\n  userId,\n  loading\n}) {\n  _s();\n\n  let voteHits = [];\n  let voteID = [];\n  let voteRegDate = [];\n  let voteTitle = [];\n  let count = 0;\n  useEffect(() => {\n    getMainRequest();\n  }, []);\n  console.log(contentList); //데이터 받기\n\n  const contentItems = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"is loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : contentList.map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      visibility: \"hidden\"\n    },\n    children: (voteHits.push(content.voteHits), voteID.push(content.voteID), voteRegDate.push(content.voteRegDate), voteTitle.push(content.voteTitle))\n  }, content.voteID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this));\n  console.log(voteTitle); //Contents에 관한 부분\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: useStyles.root,\n    children: [/*#__PURE__*/_jsxDEV(Subbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: contentList.map((content, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/content/${index + 1}`,\n          children: /*#__PURE__*/_jsxDEV(MediaCard, {\n            voteHits: content.voteHits,\n            userID: content.userID,\n            voteRegDate: content.voteRegDate,\n            voteTitle: content.voteTitle,\n            count: count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainHome, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MainHome;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    userId: state.authentication.status.currentUser,\n    contentList: state.contents.status.voteContents\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMainRequest: () => {\n      return dispatch(getMainRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHome);\n\nvar _c;\n\n$RefreshReg$(_c, \"MainHome\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/mainHome/MainHome.js"],"names":["React","useEffect","useState","RBS","useParams","connect","getMainRequest","Subbar","MediaCard","makeStyles","TextField","Button","Grid","Link","useStyles","theme","root","margin","spacing","width","MainHome","contentList","userId","loading","voteHits","voteID","voteRegDate","voteTitle","count","console","log","contentItems","map","content","visibility","push","index","userID","mapStateToProps","state","authentication","status","currentUser","contents","voteContents","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMainRequest } from \"../../redux\";\r\nimport Subbar from \"../Subbar\";\r\nimport MediaCard from \"../MediaCard\";\r\n\r\n// material import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction MainHome({ getMainRequest, contentList, userId, loading }) {\r\n  let voteHits = [];\r\n  let voteID = [];\r\n  let voteRegDate = [];\r\n  let voteTitle = [];\r\n\r\n  let count = 0;\r\n\r\n  useEffect(() => {\r\n    getMainRequest();\r\n  }, []);\r\n\r\n  console.log(contentList);\r\n\r\n  //데이터 받기\r\n  const contentItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    contentList.map((content) => (\r\n      <div key={content.voteID} style={{ visibility: \"hidden\" }}>\r\n        {\r\n          (voteHits.push(content.voteHits),\r\n          voteID.push(content.voteID),\r\n          voteRegDate.push(content.voteRegDate),\r\n          voteTitle.push(content.voteTitle))\r\n        }\r\n      </div>\r\n    ))\r\n  );\r\n  console.log(voteTitle);\r\n\r\n  //Contents에 관한 부분\r\n  return (\r\n    <div className={useStyles.root}>\r\n      <Subbar></Subbar>\r\n      <Grid container spacing={2}>\r\n        {contentList.map((content, index) => (\r\n          <Grid item xs={6} sm={3}>\r\n            <Link key={index} to={`/content/${index + 1}`}>\r\n              <MediaCard\r\n                voteHits={content.voteHits}\r\n                userID={content.userID}\r\n                voteRegDate={content.voteRegDate}\r\n                voteTitle={content.voteTitle}\r\n                count={count}\r\n              ></MediaCard>\r\n            </Link>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    contentList: state.contents.status.voteContents,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMainRequest: () => {\r\n      return dispatch(getMainRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHome);\r\n"]},"metadata":{},"sourceType":"module"}