{"ast":null,"code":"import axios from \"axios\";\nimport { GET_VOTES_FAILURE, GET_VOTES_REQUEST, GET_VOTES_SUCCESS, REGISTER_COMMENT, REGISTER_COMMENT_SUCCESS, REGISTER_COMMENT_FAILURE, DELETE_COMMENT, SET_VOTES, SET_VOTES_FAILURE, SET_VOTES_SUCCESS } from \"./types\"; // 화면 구성요소 GET\n\nexport function getVotesSuccess(votes) {\n  return {\n    type: GET_VOTES_SUCCESS,\n    votes\n  };\n}\nexport function getVotesFailure(error) {\n  return {\n    type: GET_VOTES_FAILURE,\n    payload: error\n  };\n}\nexport function getVotesREQUEST() {\n  return {\n    type: GET_VOTES_REQUEST\n  };\n}\nexport function getVotes() {\n  return dispatch => {\n    dispatch(getVotesREQUEST());\n    return axios.get(\"http://localhost:8080/content/3\", {\n      params: {\n        voteID: 3\n      }\n    }).then(response => {\n      dispatch(getVotesSuccess(response.data));\n    }).catch(error => dispatch(getVotesFailure(error)));\n  }; //   return axios\n  //     .get(\"http://localhost:8080/content/3\")\n  //     .then((response) => {\n  //       dispatch(getVotesSuccess())\n  //     })\n  //     .catch((error) => dispatch(getVotesFailure(error)));\n  // };\n} // 화면 구성요소 SET\n\nexport function setVotesRequest(body) {\n  return dispatch => {\n    dispatch(setVotes());\n    return axios.post(\"http://localhost:8080/setVote\", body).then(response => dispatch(setVotesSuccess())).catch(error => dispatch(setVotesFailure()));\n  };\n}\nexport function setVotesSuccess() {\n  return {\n    type: SET_VOTES_SUCCESS\n  };\n}\nexport function setVotesFailure() {\n  return {\n    type: SET_VOTES_FAILURE\n  };\n}\nexport function setVotes() {\n  return {\n    type: SET_VOTES\n  };\n} // 댓글 등록 기능\n\nexport function registerCommentRequest(body) {\n  return dispatch => {\n    dispatch(registerComment());\n    console.log(body);\n    return axios.post(\"http://localhost:8080/registerComment\", body).then(response => {\n      dispatch(registerCommentSuccess());\n    }).catch(error => {\n      dispatch(registerCommentFailure());\n    });\n  };\n}\nexport function registerComment() {\n  return {\n    type: REGISTER_COMMENT\n  };\n}\nexport function registerCommentSuccess() {\n  return {\n    type: REGISTER_COMMENT_SUCCESS\n  };\n}\nexport function registerCommentFailure() {\n  return {\n    type: REGISTER_COMMENT_FAILURE\n  };\n} // 댓글 삭제 기능\n\nexport function deleteCommentRequest(body) {\n  return dispatch => {\n    console.log(body);\n    return axios.post(\"http://localhost:8080/deleteComment\", body).then(response => {\n      dispatch(deleteComment());\n    });\n  };\n}\nexport function deleteComment() {\n  return {\n    type: DELETE_COMMENT\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/getVotes/actions.js"],"names":["axios","GET_VOTES_FAILURE","GET_VOTES_REQUEST","GET_VOTES_SUCCESS","REGISTER_COMMENT","REGISTER_COMMENT_SUCCESS","REGISTER_COMMENT_FAILURE","DELETE_COMMENT","SET_VOTES","SET_VOTES_FAILURE","SET_VOTES_SUCCESS","getVotesSuccess","votes","type","getVotesFailure","error","payload","getVotesREQUEST","getVotes","dispatch","get","params","voteID","then","response","data","catch","setVotesRequest","body","setVotes","post","setVotesSuccess","setVotesFailure","registerCommentRequest","registerComment","console","log","registerCommentSuccess","registerCommentFailure","deleteCommentRequest","deleteComment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_VOTES_FAILURE,\r\n  GET_VOTES_REQUEST,\r\n  GET_VOTES_SUCCESS,\r\n  REGISTER_COMMENT,\r\n  REGISTER_COMMENT_SUCCESS,\r\n  REGISTER_COMMENT_FAILURE,\r\n  DELETE_COMMENT,\r\n  SET_VOTES,\r\n  SET_VOTES_FAILURE,\r\n  SET_VOTES_SUCCESS,\r\n} from \"./types\";\r\n\r\n// 화면 구성요소 GET\r\nexport function getVotesSuccess(votes) {\r\n  return {\r\n    type: GET_VOTES_SUCCESS,\r\n    votes,\r\n  };\r\n}\r\nexport function getVotesFailure(error) {\r\n  return {\r\n    type: GET_VOTES_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function getVotesREQUEST() {\r\n  return {\r\n    type: GET_VOTES_REQUEST,\r\n  };\r\n}\r\n\r\nexport function getVotes() {\r\n  return (dispatch) => {\r\n    dispatch(getVotesREQUEST());\r\n    return axios\r\n      .get(\"http://localhost:8080/content/3\", {\r\n        params: {\r\n          voteID: 3,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        dispatch(getVotesSuccess(response.data));\r\n      })\r\n      .catch((error) => dispatch(getVotesFailure(error)));\r\n  };\r\n  //   return axios\r\n  //     .get(\"http://localhost:8080/content/3\")\r\n  //     .then((response) => {\r\n  //       dispatch(getVotesSuccess())\r\n  //     })\r\n  //     .catch((error) => dispatch(getVotesFailure(error)));\r\n  // };\r\n}\r\n\r\n// 화면 구성요소 SET\r\nexport function setVotesRequest(body) {\r\n  return (dispatch) => {\r\n    dispatch(setVotes());\r\n\r\n    return axios\r\n      .post(\"http://localhost:8080/setVote\", body)\r\n      .then((response) => dispatch(setVotesSuccess()))\r\n      .catch((error) => dispatch(setVotesFailure()));\r\n  };\r\n}\r\nexport function setVotesSuccess() {\r\n  return {\r\n    type: SET_VOTES_SUCCESS,\r\n  };\r\n}\r\nexport function setVotesFailure() {\r\n  return {\r\n    type: SET_VOTES_FAILURE,\r\n  };\r\n}\r\nexport function setVotes() {\r\n  return {\r\n    type: SET_VOTES,\r\n  };\r\n}\r\n\r\n// 댓글 등록 기능\r\nexport function registerCommentRequest(body) {\r\n  return (dispatch) => {\r\n    dispatch(registerComment());\r\n\r\n    console.log(body);\r\n    return axios\r\n      .post(\"http://localhost:8080/registerComment\", body)\r\n      .then((response) => {\r\n        dispatch(registerCommentSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(registerCommentFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function registerComment() {\r\n  return {\r\n    type: REGISTER_COMMENT,\r\n  };\r\n}\r\n\r\nexport function registerCommentSuccess() {\r\n  return {\r\n    type: REGISTER_COMMENT_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function registerCommentFailure() {\r\n  return {\r\n    type: REGISTER_COMMENT_FAILURE,\r\n  };\r\n}\r\n\r\n// 댓글 삭제 기능\r\nexport function deleteCommentRequest(body) {\r\n  return (dispatch) => {\r\n    console.log(body);\r\n    return axios\r\n      .post(\"http://localhost:8080/deleteComment\", body)\r\n      .then((response) => {\r\n        dispatch(deleteComment());\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteComment() {\r\n  return {\r\n    type: DELETE_COMMENT,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}