{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\MyDropzone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyDropzone() {\n  _s();\n\n  const [Images, setImages] = useState([]);\n  const onDrop = useCallback(async acceptedFiles => {\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\n    // 폼데이터 구성\n    const formData = new FormData();\n    const config = {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    formData.append(\"file\", acceptedFiles[0]);\n    console.log(acceptedFiles[0]);\n    await axios.post(\"http://localhost:8080/imgRegister\", formData, config).then(response => {\n      if (response.data.success) {\n        setImages([...Images, response.data.filePath]);\n        console.log(Images); //this.props.refreshFunction([...Images, response.data.filePath]);\n      } else {\n        alert(\"파일 저장 실패\");\n      }\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  const InputProps = { ...getInputProps(),\n    multiple: false,\n    accept: \"image/gif, image/jpg, image/jpeg\"\n  };\n  const RootProps = { ...getRootProps()\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...InputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC774\\uC81C \\uC774\\uBBF8\\uC9C0\\uB97C \\uB193\\uC544\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"3em\",\n          marginBottom: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uB4DC\\uB78D or \\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyDropzone, \"Qo/xcegzkA6rTZ5VjLpSqMYiyis=\", false, function () {\n  return [useDropzone];\n});\n\n_c = MyDropzone;\nMyDropzone.propTypes = {\n  onLogin: PropTypes.func\n};\nMyDropzone.defaultProps = {\n  onLogin: (id, pw) => {\n    console.error(\"login function not defined\");\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropzone\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/MyDropzone.js"],"names":["React","useState","useCallback","useDropzone","axios","Dropzone","MyDropzone","Images","setImages","onDrop","acceptedFiles","formData","FormData","config","header","append","console","log","post","then","response","data","success","filePath","alert","getRootProps","getInputProps","isDragActive","InputProps","multiple","accept","RootProps","display","flexDirection","alignItems","fontSize","marginBottom","propTypes","onLogin","PropTypes","func","defaultProps","id","pw","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMQ,MAAM,GAAGP,WAAW,CAAC,MAAOQ,aAAP,IAAyB;AAClD;AACA;AAEA;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE;AACN,wBAAgB;AADV;AADK,KAAf;AAKAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,aAAa,CAAC,CAAD,CAArC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAa,CAAC,CAAD,CAAzB;AAEA,UAAMN,KAAK,CACRc,IADG,CACE,mCADF,EACuCP,QADvC,EACiDE,MADjD,EAEHM,IAFG,CAEGC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACzBd,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYa,QAAQ,CAACC,IAAT,CAAcE,QAA1B,CAAD,CAAT;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAFyB,CAGzB;AACD,OAJD,MAIO;AACLiB,QAAAA,KAAK,CAAC,UAAD,CAAL;AACD;AACF,KAVG,CAAN;AAWD,GAzByB,EAyBvB,EAzBuB,CAA1B;AA2BA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDxB,WAAW,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAAjE;AAEA,QAAMmB,UAAU,GAAG,EACjB,GAAGF,aAAa,EADC;AAEjBG,IAAAA,QAAQ,EAAE,KAFO;AAGjBC,IAAAA,MAAM,EAAE;AAHS,GAAnB;AAMA,QAAMC,SAAS,GAAG,EAChB,GAAGN,YAAY;AADC,GAAlB;AAIA,sBACE,oBAASA,YAAY,EAArB;AAAA,4BACE,sBAAWG;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADT;AAAA,8BAOE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,YAAY,EAAE;AAAjC,SAAZ;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA/DuB9B,U;UA8BgCH,W;;;KA9BhCG,U;AAiExBA,UAAU,CAAC+B,SAAX,GAAuB;AACrBC,EAAAA,OAAO,EAAEC,SAAS,CAACC;AADE,CAAvB;AAIAlC,UAAU,CAACmC,YAAX,GAA0B;AACxBH,EAAAA,OAAO,EAAE,CAACI,EAAD,EAAKC,EAAL,KAAY;AACnB3B,IAAAA,OAAO,CAAC4B,KAAR,CAAc,4BAAd;AACD;AAHuB,CAA1B","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function MyDropzone() {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\r\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\r\n\r\n    // 폼데이터 구성\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n    console.log(acceptedFiles[0]);\r\n\r\n    await axios\r\n      .post(\"http://localhost:8080/imgRegister\", formData, config)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setImages([...Images, response.data.filePath]);\r\n          console.log(Images);\r\n          //this.props.refreshFunction([...Images, response.data.filePath]);\r\n        } else {\r\n          alert(\"파일 저장 실패\");\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const InputProps = {\r\n    ...getInputProps(),\r\n    multiple: false,\r\n    accept: \"image/gif, image/jpg, image/jpeg\",\r\n  };\r\n\r\n  const RootProps = {\r\n    ...getRootProps(),\r\n  };\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...InputProps} />\r\n      {isDragActive ? (\r\n        <p>이제 이미지를 놓아주세요</p>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"3em\", marginBottom: \"5px\" }}>\r\n            <i className=\"fas fa-file-upload\"></i>\r\n          </div>\r\n          <div>이미지 드랍 or 클릭</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nMyDropzone.propTypes = {\r\n  onLogin: PropTypes.func,\r\n};\r\n\r\nMyDropzone.defaultProps = {\r\n  onLogin: (id, pw) => {\r\n    console.error(\"login function not defined\");\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}