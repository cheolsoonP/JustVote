{"ast":null,"code":"import axios from \"axios\";\nimport { GET_VOTES_FAILURE, GET_VOTES_REQUEST, GET_VOTES_SUCCESS, REGISTER_COMMENT, REGISTER_COMMENT_SUCCESS, REGISTER_COMMENT_FAILURE } from \"./types\";\nexport function getVotesSuccess(votes) {\n  return {\n    type: GET_VOTES_SUCCESS,\n    payload: votes\n  };\n}\nexport function getVotesFailure(error) {\n  return {\n    type: GET_VOTES_FAILURE,\n    payload: error\n  };\n}\nexport function getVotesREQUEST() {\n  return {\n    type: GET_VOTES_REQUEST\n  };\n}\nexport function getVotes() {\n  return dispatch => {\n    dispatch(getVotesREQUEST());\n    return axios.get(\"https://jsonplaceholder.typicode.com/comments\").then(response => dispatch(getVotesSuccess(response.data))).catch(error => dispatch(getVotesFailure(error))); // .then(votes =>\n    //     dispatch(getVotesSuccess(votes)))\n    // .catch(error => ))\n  };\n} // 댓글 등록 기능\n\nexport function registerCommentsRequest(voteTitle, comments) {\n  return dispatch => {\n    dispatch(registerComments());\n    let body = {\n      // ID도 넣어주기\n      voteTitle: voteTitle,\n      comments: comments\n    };\n    console.log(body);\n    return axios.post(\"http://localhost:8080/registerComments\", body).then(response => {\n      dispatch(registerCommentsSuccess());\n    }).catch(error => {\n      dispatch(registerCommentsFailure());\n    });\n  };\n}\nexport function registerComments() {\n  console.log(\"registerComments\");\n  return {\n    type: REGISTER_COMMENT\n  };\n}\nexport function registerCommentsSuccess() {\n  console.log(\"registerCommentsSuccess\");\n  return {\n    type: REGISTER_COMMENT_SUCCESS\n  };\n}\nexport function registerCommentsFailure() {\n  console.log(\"registerCommentsFailure\");\n  return {\n    type: REGISTER_COMMENT_FAILURE\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/getVotes/actions.js"],"names":["axios","GET_VOTES_FAILURE","GET_VOTES_REQUEST","GET_VOTES_SUCCESS","REGISTER_COMMENT","REGISTER_COMMENT_SUCCESS","REGISTER_COMMENT_FAILURE","getVotesSuccess","votes","type","payload","getVotesFailure","error","getVotesREQUEST","getVotes","dispatch","get","then","response","data","catch","registerCommentsRequest","voteTitle","comments","registerComments","body","console","log","post","registerCommentsSuccess","registerCommentsFailure"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,wBALF,EAMEC,wBANF,QAOO,SAPP;AASA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAEN,iBADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AACD,OAAO,SAASG,eAAT,CAAyBC,KAAzB,EAAgC;AACrC,SAAO;AACLH,IAAAA,IAAI,EAAER,iBADD;AAELS,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AACD,OAAO,SAASC,eAAT,GAA2B;AAChC,SAAO;AACLJ,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD;AACD,OAAO,SAASY,QAAT,GAAoB;AACzB,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACF,eAAe,EAAhB,CAAR;AACA,WAAOb,KAAK,CACTgB,GADI,CACA,+CADA,EAEJC,IAFI,CAEEC,QAAD,IAAcH,QAAQ,CAACR,eAAe,CAACW,QAAQ,CAACC,IAAV,CAAhB,CAFvB,EAGJC,KAHI,CAGGR,KAAD,IAAWG,QAAQ,CAACJ,eAAe,CAACC,KAAD,CAAhB,CAHrB,CAAP,CAFmB,CAMnB;AACA;AACA;AACD,GATD;AAUD,C,CAED;;AACA,OAAO,SAASS,uBAAT,CAAiCC,SAAjC,EAA4CC,QAA5C,EAAsD;AAC3D,SAAQR,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACS,gBAAgB,EAAjB,CAAR;AAEA,QAAIC,IAAI,GAAG;AACT;AACAH,MAAAA,SAAS,EAAEA,SAFF;AAGTC,MAAAA,QAAQ,EAAEA;AAHD,KAAX;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAOzB,KAAK,CACT4B,IADI,CACC,wCADD,EAC2CH,IAD3C,EAEJR,IAFI,CAEEC,QAAD,IAAc;AAClBH,MAAAA,QAAQ,CAACc,uBAAuB,EAAxB,CAAR;AACD,KAJI,EAKJT,KALI,CAKGR,KAAD,IAAW;AAChBG,MAAAA,QAAQ,CAACe,uBAAuB,EAAxB,CAAR;AACD,KAPI,CAAP;AAQD,GAlBD;AAmBD;AAED,OAAO,SAASN,gBAAT,GAA4B;AACjCE,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,SAAO;AACLlB,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD;AAED,OAAO,SAASyB,uBAAT,GAAmC;AACxCH,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAO;AACLlB,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;AAED,OAAO,SAASyB,uBAAT,GAAmC;AACxCJ,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,SAAO;AACLlB,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_VOTES_FAILURE,\r\n  GET_VOTES_REQUEST,\r\n  GET_VOTES_SUCCESS,\r\n  REGISTER_COMMENT,\r\n  REGISTER_COMMENT_SUCCESS,\r\n  REGISTER_COMMENT_FAILURE,\r\n} from \"./types\";\r\n\r\nexport function getVotesSuccess(votes) {\r\n  return {\r\n    type: GET_VOTES_SUCCESS,\r\n    payload: votes,\r\n  };\r\n}\r\nexport function getVotesFailure(error) {\r\n  return {\r\n    type: GET_VOTES_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function getVotesREQUEST() {\r\n  return {\r\n    type: GET_VOTES_REQUEST,\r\n  };\r\n}\r\nexport function getVotes() {\r\n  return (dispatch) => {\r\n    dispatch(getVotesREQUEST());\r\n    return axios\r\n      .get(\"https://jsonplaceholder.typicode.com/comments\")\r\n      .then((response) => dispatch(getVotesSuccess(response.data)))\r\n      .catch((error) => dispatch(getVotesFailure(error)));\r\n    // .then(votes =>\r\n    //     dispatch(getVotesSuccess(votes)))\r\n    // .catch(error => ))\r\n  };\r\n}\r\n\r\n// 댓글 등록 기능\r\nexport function registerCommentsRequest(voteTitle, comments) {\r\n  return (dispatch) => {\r\n    dispatch(registerComments());\r\n\r\n    let body = {\r\n      // ID도 넣어주기\r\n      voteTitle: voteTitle,\r\n      comments: comments,\r\n    };\r\n\r\n    console.log(body);\r\n    return axios\r\n      .post(\"http://localhost:8080/registerComments\", body)\r\n      .then((response) => {\r\n        dispatch(registerCommentsSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(registerCommentsFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function registerComments() {\r\n  console.log(\"registerComments\");\r\n  return {\r\n    type: REGISTER_COMMENT,\r\n  };\r\n}\r\n\r\nexport function registerCommentsSuccess() {\r\n  console.log(\"registerCommentsSuccess\");\r\n  return {\r\n    type: REGISTER_COMMENT_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function registerCommentsFailure() {\r\n  console.log(\"registerCommentsFailure\");\r\n  return {\r\n    type: REGISTER_COMMENT_FAILURE,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}