{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\MyDropzone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, Component, Fragment } from \"react\";\nimport propTypes from \"prop-types\"; // 이미지 전송\n\nimport axios from \"axios\";\nimport { useDropzone } from \"react-dropzone\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyDropzone() {\n  _s();\n\n  const onDrop = useCallback(async acceptedFiles => {\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\n    // 폼데이터 구성\n    const formData = new FormData();\n    const config = {\n      header: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    formData.append(\"file\", acceptedFiles[0]);\n    console.log(acceptedFiles[0]); // 배포시에는 지워줘야 합니다.\n\n    axios.defaults.baseURL = \"http://localhost:5000/\";\n    await axios.post(\"/api/image/upload\", formData, config).then(res => {\n      console.log(res);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  const InputProps = { ...getInputProps(),\n    multiple: false,\n    accept: \"image/gif, image/jpg, image/jpeg\"\n  };\n  const RootProps = { ...getRootProps()\n  };\n  return /*#__PURE__*/_jsxDEV(Dropzone, { ...RootProps,\n    maxSize: 100,\n    multiple: false,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...InputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC774\\uC81C \\uC774\\uBBF8\\uC9C0\\uB97C \\uB193\\uC544\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"3em\",\n          marginBottom: \"5px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uB4DC\\uB78D or \\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyDropzone, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n\n_c = MyDropzone;\nexport default MyDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropzone\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/MyDropzone.js"],"names":["React","useCallback","Component","Fragment","propTypes","axios","useDropzone","Dropzone","MyDropzone","onDrop","acceptedFiles","formData","FormData","config","header","append","console","log","defaults","baseURL","post","then","res","getRootProps","getInputProps","isDragActive","InputProps","multiple","accept","RootProps","display","flexDirection","alignItems","fontSize","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,MAAM,GAAGR,WAAW,CAAC,MAAOS,aAAP,IAAyB;AAClD;AACA;AAEA;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,MAAM,EAAE;AACN,wBAAgB;AADV;AADK,KAAf;AAKAH,IAAAA,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwBL,aAAa,CAAC,CAAD,CAArC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAa,CAAC,CAAD,CAAzB,EAZkD,CAclD;;AACAL,IAAAA,KAAK,CAACa,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;AACA,UAAMd,KAAK,CAACe,IAAN,CAAW,mBAAX,EAAgCT,QAAhC,EAA0CE,MAA1C,EAAkDQ,IAAlD,CAAwDC,GAAD,IAAS;AACpEN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,KAFK,CAAN;AAGD,GAnByB,EAmBvB,EAnBuB,CAA1B;AAqBA,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,MAAgDnB,WAAW,CAAC;AAAEG,IAAAA;AAAF,GAAD,CAAjE;AAEA,QAAMiB,UAAU,GAAG,EACjB,GAAGF,aAAa,EADC;AAEjBG,IAAAA,QAAQ,EAAE,KAFO;AAGjBC,IAAAA,MAAM,EAAE;AAHS,GAAnB;AAMA,QAAMC,SAAS,GAAG,EAChB,GAAGN,YAAY;AADC,GAAlB;AAIA,sBACE,QAAC,QAAD,OAAcM,SAAd;AAAyB,IAAA,OAAO,EAAE,GAAlC;AAAuC,IAAA,QAAQ,EAAE,KAAjD;AAAA,4BACE,sBAAWH;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,YAAY,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADW,gBAGX;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,UAAU,EAAE;AAHP,OADT;AAAA,8BAOE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,KAAZ;AAAmBC,UAAAA,YAAY,EAAE;AAAjC,SAAZ;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAvDQ1B,U;UAsB+CF,W;;;KAtB/CE,U;AAyDT,eAAeA,UAAf","sourcesContent":["import React, { useCallback, Component, Fragment } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// 이미지 전송\r\nimport axios from \"axios\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nfunction MyDropzone() {\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\r\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\r\n\r\n    // 폼데이터 구성\r\n    const formData = new FormData();\r\n    const config = {\r\n      header: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n    console.log(acceptedFiles[0]);\r\n\r\n    // 배포시에는 지워줘야 합니다.\r\n    axios.defaults.baseURL = \"http://localhost:5000/\";\r\n    await axios.post(\"/api/image/upload\", formData, config).then((res) => {\r\n      console.log(res);\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  const InputProps = {\r\n    ...getInputProps(),\r\n    multiple: false,\r\n    accept: \"image/gif, image/jpg, image/jpeg\",\r\n  };\r\n\r\n  const RootProps = {\r\n    ...getRootProps(),\r\n  };\r\n\r\n  return (\r\n    <Dropzone {...RootProps} maxSize={100} multiple={false}>\r\n      <input {...InputProps} />\r\n      {isDragActive ? (\r\n        <p>이제 이미지를 놓아주세요</p>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"3em\", marginBottom: \"5px\" }}>\r\n            <i className=\"fas fa-file-upload\"></i>\r\n          </div>\r\n          <div>이미지 드랍 or 클릭</div>\r\n        </div>\r\n      )}\r\n    </Dropzone>\r\n  );\r\n}\r\n\r\nexport default MyDropzone;\r\n"]},"metadata":{},"sourceType":"module"}