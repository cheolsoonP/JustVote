{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\CreateVote.js\";\nimport React, { Component, Fragment } from \"react\"; // import { connect } from \"react-redux\";\n\nimport propTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport \"./createvote.css\"; // 이미지 전송\n\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dropzone from \"react-dropzone\"; // import axios from 'axios';\n// import { CreateVotes } from '../redux/makevote/actions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  input: {\n    display: \"none\"\n  }\n}));\n\nclass CreateVote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userId: \"\",\n      voteTitle: \"\",\n      voteContents: [\"\"],\n      picture: {} // 이미지\n\n    };\n\n    this.handleChange = e => {\n      let nextState = {};\n      nextState[e.target.name] = e.target.value;\n      this.setState(nextState);\n    };\n\n    this.addAnswer = e => {\n      this.setState({\n        voteContents: [...this.state.voteContents, \"\"]\n      });\n    };\n\n    this.removeAnswer = index => {\n      const newContents = this.state.voteContents.filter((content, i) => {\n        return i !== index;\n      });\n      this.setState({\n        voteContents: newContents\n      });\n    };\n\n    this.handleAnswer = (e, index) => {\n      const voteContents = [...this.state.voteContents];\n      voteContents[index] = e.target.value;\n      this.setState({\n        voteContents\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log(this.state);\n      let body = {\n        voteId: this.state.voteId,\n        voteTitle: this.state.voteTitle,\n        voteContent: this.state.voteContents\n      };\n      console.log(body);\n      this.props.onPost(body).then(() => {\n        // 보내지면 빈칸으로 변경\n        this.setState({\n          userId: \"\",\n          voteTitle: \"\",\n          voteContents: [\"\"]\n        });\n      }); // this.props.CreateVotes(this.state);\n    };\n\n    this.dropHandler = files => {\n      let formData = new FormData();\n      const config = {\n        header: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      formData.append(\"file\", files[0]);\n      axios.post(\"/api/product/image\", formData, config).then(response => {\n        if (response.data.success) {\n          setImages([...Images, response.data.filePath]);\n          props.refreshFunction([...Images, response.data.filePath]);\n        } else {\n          alert(\"파일 저장 실패\");\n        }\n      });\n    };\n  }\n\n  render() {\n    const voteContents = this.state.voteContents.map((content, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"\\uD56D\\uBAA9\",\n        variant: \"outlined\",\n        className: \"content\",\n        type: \"text\",\n        value: content,\n        onChange: e => this.handleAnswer(e, i)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"remove-button\",\n          type: \"button\",\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"medium\",\n          onClick: e => this.removeAnswer(i),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        htmlFor: \"voteTitle\",\n        children: \"\\uD22C\\uD45C \\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        name: \"voteTitle\",\n        value: this.state.voteTitle,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conContainer\",\n        children: voteContents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons_center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          type: \"button\",\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"medium\",\n          onClick: this.addAnswer,\n          children: \"\\uD56D\\uBAA9 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          type: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"\\uD22C\\uD45C \\uB9CC\\uB4E4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: onSaveFiles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onFileUpload,\n          children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCreateVote.propTypes = {\n  onPost: propTypes.func\n};\nCreateVote.defaultProps = {\n  onPost: body => {\n    console.error(\"post function not defined\");\n  }\n};\nexport default CreateVote; // export default connect(() => ({}), { CreateVotes })(CreateVote);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/CreateVote.js"],"names":["React","Component","Fragment","propTypes","TextField","Button","axios","makeStyles","Dropzone","useStyles","theme","root","margin","spacing","input","display","CreateVote","state","userId","voteTitle","voteContents","picture","handleChange","e","nextState","target","name","value","setState","addAnswer","removeAnswer","index","newContents","filter","content","i","handleAnswer","handleSubmit","preventDefault","console","log","body","voteId","voteContent","props","onPost","then","dropHandler","files","formData","FormData","config","header","append","post","response","data","success","setImages","Images","filePath","refreshFunction","alert","render","map","onSaveFiles","onFileUpload","func","defaultProps","error"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\n// import { connect } from \"react-redux\";\r\nimport propTypes from \"prop-types\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./createvote.css\";\r\n\r\n// 이미지 전송\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\n// import axios from 'axios';\r\n\r\n// import { CreateVotes } from '../redux/makevote/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nclass CreateVote extends Component {\r\n  state = {\r\n    userId: \"\",\r\n    voteTitle: \"\",\r\n    voteContents: [\"\"],\r\n    picture: {},\r\n    // 이미지\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  addAnswer = (e) => {\r\n    this.setState({ voteContents: [...this.state.voteContents, \"\"] });\r\n  };\r\n\r\n  removeAnswer = (index) => {\r\n    const newContents = this.state.voteContents.filter((content, i) => {\r\n      return i !== index;\r\n    });\r\n\r\n    this.setState({ voteContents: newContents });\r\n  };\r\n\r\n  handleAnswer = (e, index) => {\r\n    const voteContents = [...this.state.voteContents];\r\n    voteContents[index] = e.target.value;\r\n    this.setState({ voteContents });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n    let body = {\r\n      voteId: this.state.voteId,\r\n      voteTitle: this.state.voteTitle,\r\n      voteContent: this.state.voteContents,\r\n    };\r\n\r\n    console.log(body);\r\n\r\n    this.props.onPost(body).then(() => {\r\n      // 보내지면 빈칸으로 변경\r\n      this.setState({\r\n        userId: \"\",\r\n        voteTitle: \"\",\r\n        voteContents: [\"\"],\r\n      });\r\n    });\r\n    // this.props.CreateVotes(this.state);\r\n  };\r\n\r\n  // 이미지 전송\r\n  dropHandler = (files) => {\r\n    let formData = new FormData();\r\n\r\n    const config = {\r\n      header: { \"content-type\": \"multipart/form-data\" },\r\n    };\r\n    formData.append(\"file\", files[0]);\r\n\r\n    axios.post(\"/api/product/image\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        setImages([...Images, response.data.filePath]);\r\n        props.refreshFunction([...Images, response.data.filePath]);\r\n      } else {\r\n        alert(\"파일 저장 실패\");\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const voteContents = this.state.voteContents.map((content, i) => (\r\n      <Fragment key={i}>\r\n        <label className=\"form-label\"></label>\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"항목\"\r\n          variant=\"outlined\"\r\n          className=\"content\"\r\n          type=\"text\"\r\n          value={content}\r\n          key={i}\r\n          onChange={(e) => this.handleAnswer(e, i)}\r\n        />\r\n        <div className=\"button-container\">\r\n          <Button\r\n            className=\"remove-button\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={(e) => this.removeAnswer(i)}\r\n          >\r\n            삭제\r\n          </Button>\r\n        </div>\r\n      </Fragment>\r\n    ));\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form-label\" htmlFor=\"voteTitle\">\r\n          투표 제목\r\n        </label>\r\n        <input\r\n          className=\"form-input\"\r\n          type=\"text\"\r\n          name=\"voteTitle\"\r\n          value={this.state.voteTitle}\r\n          onChange={this.handleChange}\r\n        />\r\n        <div className=\"conContainer\">{voteContents}</div>\r\n        <div className=\"buttons_center\">\r\n          <Button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            onClick={this.addAnswer}\r\n          >\r\n            항목 추가\r\n          </Button>\r\n          <Button className=\"button\" type=\"submit\" onClick={this.handleSubmit}>\r\n            투표 만들기\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <input type=\"file\" multiple onChange={onSaveFiles} />\r\n          <button onClick={onFileUpload}>파일 업로드</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nCreateVote.propTypes = {\r\n  onPost: propTypes.func,\r\n};\r\n\r\nCreateVote.defaultProps = {\r\n  onPost: (body) => {\r\n    console.error(\"post function not defined\");\r\n  },\r\n};\r\n\r\nexport default CreateVote;\r\n// export default connect(() => ({}), { CreateVotes })(CreateVote);\r\n"]},"metadata":{},"sourceType":"module"}