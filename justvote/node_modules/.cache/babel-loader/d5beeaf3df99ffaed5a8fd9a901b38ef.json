{"ast":null,"code":"import axios from \"axios\";\nimport { GET_VOTES_FAILURE, GET_VOTES_REQUEST, GET_VOTES_SUCCESS, REGISTER_COMMENT, REGISTER_COMMENT_SUCCESS, REGISTER_COMMENT_FAILURE, DELETE_COMMENT, SET_VOTES, SET_VOTES_FAILURE, SET_VOTES_SUCCESS } from \"./types\"; // 화면 구성요소 GET\n\nexport function getVotesSuccess(votes) {\n  return {\n    type: GET_VOTES_SUCCESS,\n    payload: votes\n  };\n}\nexport function getVotesFailure(error) {\n  return {\n    type: GET_VOTES_FAILURE,\n    payload: error\n  };\n}\nexport function getVotesREQUEST() {\n  return {\n    type: GET_VOTES_REQUEST\n  };\n}\nexport function getVotes() {\n  return dispatch => {\n    dispatch(getVotesREQUEST());\n    return axios.get(\"http://localhost:8080/makeVote\").then(response => dispatch(getVotesSuccess(response.data))).catch(error => dispatch(getVotesFailure(error))); // .then(votes =>\n    //     dispatch(getVotesSuccess(votes)))\n    // .catch(error => ))\n  };\n} // 화면 구성요소 SET\n\nexport function setVotesRequest(body) {\n  return dispatch => {\n    dispatch(setVotes());\n    return axios.get(\"http://localhost:8080/makeVote\", body).then(response => dispatch(setVotesSuccess())).catch(error => dispatch(setVotesFailure()));\n  };\n}\nexport function setVotesSuccess() {\n  return {\n    type: SET_VOTES_SUCCESS\n  };\n}\nexport function setVotesFailure() {\n  return {\n    type: SET_VOTES_FAILURE\n  };\n}\nexport function setVotes() {\n  return {\n    type: SET_VOTES\n  };\n} // 댓글 등록 기능\n\nexport function registerCommentRequest(body) {\n  return dispatch => {\n    dispatch(registerComment()); // let body = {\n    //   // ID도 넣어주기\n    //   voteTitle: voteTitle,\n    //   Comment: Comment,\n    // };\n\n    console.log(body);\n    return axios.post(\"http://localhost:8080/registerComment\", body).then(response => {\n      dispatch(registerCommentSuccess());\n    }).catch(error => {\n      dispatch(registerCommentFailure());\n    });\n  };\n}\nexport function registerComment() {\n  return {\n    type: REGISTER_COMMENT\n  };\n}\nexport function registerCommentSuccess() {\n  return {\n    type: REGISTER_COMMENT_SUCCESS\n  };\n}\nexport function registerCommentFailure() {\n  return {\n    type: REGISTER_COMMENT_FAILURE\n  };\n} // 댓글 삭제 기능\n\nexport function deleteCommentRequest(body) {\n  return dispatch => {\n    console.log(body);\n    return axios.post(\"http://localhost:8080/deleteComment\", body).then(response => {\n      dispatch(deleteComment());\n    });\n  };\n}\nexport function deleteComment() {\n  return {\n    type: DELETE_COMMENT\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/getVotes/actions.js"],"names":["axios","GET_VOTES_FAILURE","GET_VOTES_REQUEST","GET_VOTES_SUCCESS","REGISTER_COMMENT","REGISTER_COMMENT_SUCCESS","REGISTER_COMMENT_FAILURE","DELETE_COMMENT","SET_VOTES","SET_VOTES_FAILURE","SET_VOTES_SUCCESS","getVotesSuccess","votes","type","payload","getVotesFailure","error","getVotesREQUEST","getVotes","dispatch","get","then","response","data","catch","setVotesRequest","body","setVotes","setVotesSuccess","setVotesFailure","registerCommentRequest","registerComment","console","log","post","registerCommentSuccess","registerCommentFailure","deleteCommentRequest","deleteComment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  GET_VOTES_FAILURE,\r\n  GET_VOTES_REQUEST,\r\n  GET_VOTES_SUCCESS,\r\n\r\n  REGISTER_COMMENT,\r\n  REGISTER_COMMENT_SUCCESS,\r\n  REGISTER_COMMENT_FAILURE,\r\n  DELETE_COMMENT,\r\n\r\n  SET_VOTES,\r\n  SET_VOTES_FAILURE,\r\n  SET_VOTES_SUCCESS\r\n} from \"./types\";\r\n\r\n// 화면 구성요소 GET\r\nexport function getVotesSuccess(votes) {\r\n  return {\r\n    type: GET_VOTES_SUCCESS,\r\n    payload: votes,\r\n  };\r\n}\r\nexport function getVotesFailure(error) {\r\n  return {\r\n    type: GET_VOTES_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\nexport function getVotesREQUEST() {\r\n  return {\r\n    type: GET_VOTES_REQUEST,\r\n  };\r\n}\r\nexport function getVotes() {\r\n  return (dispatch) => {\r\n    dispatch(getVotesREQUEST());\r\n\r\n    return axios\r\n      .get(\"http://localhost:8080/makeVote\")\r\n      .then((response) => dispatch(getVotesSuccess(response.data)))\r\n      .catch((error) => dispatch(getVotesFailure(error)));\r\n    // .then(votes =>\r\n    //     dispatch(getVotesSuccess(votes)))\r\n    // .catch(error => ))\r\n  };\r\n}\r\n\r\n\r\n// 화면 구성요소 SET\r\nexport function setVotesRequest(body) {\r\n  return (dispatch) => {\r\n    dispatch(setVotes());\r\n\r\n    return axios\r\n      .get(\"http://localhost:8080/makeVote\", body)\r\n      .then((response) => dispatch(setVotesSuccess()))\r\n      .catch((error) => dispatch(setVotesFailure()));\r\n  };\r\n}\r\nexport function setVotesSuccess() {\r\n  return {\r\n    type: SET_VOTES_SUCCESS,\r\n  };\r\n\r\n}\r\nexport function setVotesFailure() {\r\n  return {\r\n    type: SET_VOTES_FAILURE,\r\n  };\r\n\r\n}\r\nexport function setVotes() {\r\n  return {\r\n    type: SET_VOTES\r\n  };\r\n}\r\n\r\n\r\n\r\n// 댓글 등록 기능\r\nexport function registerCommentRequest(body) {\r\n  return (dispatch) => {\r\n    dispatch(registerComment());\r\n\r\n    // let body = {\r\n    //   // ID도 넣어주기\r\n    //   voteTitle: voteTitle,\r\n    //   Comment: Comment,\r\n    // };\r\n\r\n    console.log(body);\r\n    return axios\r\n      .post(\"http://localhost:8080/registerComment\", body)\r\n      .then((response) => {\r\n        dispatch(registerCommentSuccess());\r\n      })\r\n      .catch((error) => {\r\n        dispatch(registerCommentFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function registerComment() {\r\n  return {\r\n    type: REGISTER_COMMENT,\r\n  };\r\n}\r\n\r\nexport function registerCommentSuccess() {\r\n  return {\r\n    type: REGISTER_COMMENT_SUCCESS,\r\n  };\r\n}\r\n\r\nexport function registerCommentFailure() {\r\n  return {\r\n    type: REGISTER_COMMENT_FAILURE,\r\n  };\r\n}\r\n\r\n// 댓글 삭제 기능\r\nexport function deleteCommentRequest(body) {\r\n  return (dispatch) => {\r\n    console.log(body);\r\n    return axios\r\n      .post(\"http://localhost:8080/deleteComment\", body)\r\n      .then((response) => {\r\n        dispatch(deleteComment());\r\n      });\r\n  };\r\n}\r\n\r\nexport function deleteComment() {\r\n  return {\r\n    type: DELETE_COMMENT,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}