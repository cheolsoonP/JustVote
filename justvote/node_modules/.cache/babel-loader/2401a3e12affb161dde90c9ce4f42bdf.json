{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\login\\\\Register.js\";\nimport React, { Component } from 'react';\nimport Authentication from './Authentication';\nimport { connect } from 'react-redux';\nimport { registerRequest } from '../../redux/authentication/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleRegister = (id, pw) => {\n      return this.props.registerRequest(id, pw).then(() => {\n        if (this.props.status === \"SUCCESS\") {\n          // Materialize.toast('Success! Please log in.', 2000);\n          this.props.history.push('/login');\n          return true;\n        } else {\n          /*\r\n              ERROR CODES:\r\n                  1: BAD USERNAME\r\n                  2: BAD PASSWORD\r\n                  3: USERNAME EXISTS\r\n          */\n          let errorMessage = ['Invalid Username', 'Password is too short', 'Username already exists'];\n          let $toastContent = $('<span style=\"color: #FFB4BA\">' + errorMessage[this.props.errorCode - 1] + '</span>'); //Materialize.toast($toastContent, 2000);\n\n          return false;\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Authentication, {\n        mode: false,\n        onRegister: this.handleRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.authentication.register.status,\n    errorCode: state.authentication.register.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    registerRequest: (id, pw) => {\n      return dispatch(registerRequest(id, pw));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/login/Register.js"],"names":["React","Component","Authentication","connect","registerRequest","Register","handleRegister","id","pw","props","then","status","history","push","errorMessage","$toastContent","$","errorCode","render","mapStateToProps","state","authentication","register","error","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,oCAAhC;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BK,cAD+B,GACd,CAACC,EAAD,EAAKC,EAAL,KAAY;AACzB,aAAO,KAAKC,KAAL,CAAWL,eAAX,CAA2BG,EAA3B,EAA+BC,EAA/B,EAAmCE,IAAnC,CACH,MAAM;AACF,YAAG,KAAKD,KAAL,CAAWE,MAAX,KAAsB,SAAzB,EAAoC;AAChC;AACA,eAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACA,iBAAO,IAAP;AACH,SAJD,MAIO;AACH;AAClB;AACA;AACA;AACA;AACA;AACkB,cAAIC,YAAY,GAAG,CACf,kBADe,EAEf,uBAFe,EAGf,yBAHe,CAAnB;AAMA,cAAIC,aAAa,GAAGC,CAAC,CAAC,kCAAkCF,YAAY,CAAC,KAAKL,KAAL,CAAWQ,SAAX,GAAuB,CAAxB,CAA9C,GAA2E,SAA5E,CAArB,CAbG,CAcH;;AACA,iBAAO,KAAP;AACH;AACJ,OAvBE,CAAP;AAyBH,KA3B8B;AAAA;;AA6B/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAE,KAAtB;AACE,QAAA,UAAU,EAAE,KAAKZ;AADnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AApC8B;;AAuCjC,MAAMa,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHT,IAAAA,MAAM,EAAES,KAAK,CAACC,cAAN,CAAqBC,QAArB,CAA8BX,MADnC;AAEHM,IAAAA,SAAS,EAAEG,KAAK,CAACC,cAAN,CAAqBC,QAArB,CAA8BC;AAFtC,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACHrB,IAAAA,eAAe,EAAE,CAACG,EAAD,EAAKC,EAAL,KAAY;AACzB,aAAOiB,QAAQ,CAACrB,eAAe,CAACG,EAAD,EAAKC,EAAL,CAAhB,CAAf;AACH;AAHE,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Authentication from './Authentication';\r\nimport { connect } from 'react-redux';\r\nimport { registerRequest } from '../../redux/authentication/actions';\r\n\r\nclass Register extends Component {\r\n  handleRegister = (id, pw) => {\r\n      return this.props.registerRequest(id, pw).then(\r\n          () => {\r\n              if(this.props.status === \"SUCCESS\") {\r\n                  // Materialize.toast('Success! Please log in.', 2000);\r\n                  this.props.history.push('/login');\r\n                  return true;\r\n              } else {\r\n                  /*\r\n                      ERROR CODES:\r\n                          1: BAD USERNAME\r\n                          2: BAD PASSWORD\r\n                          3: USERNAME EXISTS\r\n                  */\r\n                  let errorMessage = [\r\n                      'Invalid Username',\r\n                      'Password is too short',\r\n                      'Username already exists'\r\n                  ];\r\n\r\n                  let $toastContent = $('<span style=\"color: #FFB4BA\">' + errorMessage[this.props.errorCode - 1] + '</span>');\r\n                  //Materialize.toast($toastContent, 2000);\r\n                  return false;\r\n              }\r\n          }\r\n      );\r\n  }\r\n\r\n  render() {\r\n      return (\r\n          <div>\r\n              <Authentication mode={false}\r\n                onRegister={this.handleRegister}/>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      status: state.authentication.register.status,\r\n      errorCode: state.authentication.register.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      registerRequest: (id, pw) => {\r\n          return dispatch(registerRequest(id, pw));\r\n      }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n"]},"metadata":{},"sourceType":"module"}