{"ast":null,"code":"/* REGISTER */\nimport * as types from \"./types\";\nconst initialState = {\n  register: {\n    status: \"INIT\"\n  },\n  duplicate: {\n    check: \"\"\n  }\n};\nexport default function register(state = initialState, action) {\n  switch (action.type) {\n    case types.REGISTER:\n      return { ...state,\n        register: {\n          status: \"WAITING\"\n        }\n      };\n\n    case types.REGISTER_SUCCESS:\n      return { ...state,\n        register: { ...state.register,\n          status: \"SUCCESS\"\n        }\n      };\n\n    case types.REGISTER_FAILURE:\n      return { ...state,\n        register: {\n          status: \"FAILURE\"\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/signup/reducer.js"],"names":["types","initialState","register","status","duplicate","check","state","action","type","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE;AADA,GADS;AAInBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE;AAJQ,CAArB;AASA,eAAe,SAASH,QAAT,CAAkBI,KAAK,GAAGL,YAA1B,EAAwCM,MAAxC,EAAgD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,QAAX;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,QAAQ,EAAE;AACRC,UAAAA,MAAM,EAAE;AADA;AAFL,OAAP;;AAMF,SAAKH,KAAK,CAACU,gBAAX;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,QAAQ,EAAE,EACR,GAAGI,KAAK,CAACJ,QADD;AAERC,UAAAA,MAAM,EAAE;AAFA;AAFL,OAAP;;AAOF,SAAKH,KAAK,CAACW,gBAAX;AACE,aAAO,EACL,GAAGL,KADE;AAELJ,QAAAA,QAAQ,EAAE;AACRC,UAAAA,MAAM,EAAE;AADA;AAFL,OAAP;;AAMF;AACE,aAAOG,KAAP;AAxBJ;AA0BD","sourcesContent":["/* REGISTER */\r\nimport * as types from \"./types\";\r\n\r\nconst initialState = {\r\n  register: {\r\n    status: \"INIT\",\r\n  },\r\n  duplicate: {\r\n    check: \"\",\r\n  },\r\n};\r\n\r\nexport default function register(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.REGISTER:\r\n      return {\r\n        ...state,\r\n        register: {\r\n          status: \"WAITING\",\r\n        },\r\n      };\r\n    case types.REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        register: {\r\n          ...state.register,\r\n          status: \"SUCCESS\",\r\n        },\r\n      };\r\n    case types.REGISTER_FAILURE:\r\n      return {\r\n        ...state,\r\n        register: {\r\n          status: \"FAILURE\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}