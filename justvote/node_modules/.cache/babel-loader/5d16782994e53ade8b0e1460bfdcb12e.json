{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\mainHome\\\\MainHome.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as RBS from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getMainRequest } from \"../../redux\";\nimport Subbar from \"../Subbar\"; // material import\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\"\n    }\n  }\n}));\n\nfunction MainHome({\n  getMainRequest,\n  contentList,\n  userId\n}) {\n  _s();\n\n  let voteHits = [];\n  let voteID = [];\n  let voteRegDate = [];\n  let voteTitle = [];\n  useEffect(() => {\n    getMainRequest();\n  }, []); //데이터 받기\n\n  const contentItem = items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      visibility: \"hidden\"\n    },\n    children: (voteHits.push(item.voteHits), voteID.push(item.voteID), voteRegDate.push(item.voteRegDate), voteTitle.push(item.voteTitle))\n  }, item.voteID, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this)); //Contents에 관한 부분\n\n  function contentList() {\n    let P = []; // for (let i = 0; i < items.selecContent.length; i++) {\n    //   P.push((items.selecHits[i] / items.voteHits) * 100);\n    //   P[i] = P[i].toFixed(2);\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: useStyles.root,\n      children: [/*#__PURE__*/_jsxDEV(Subbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: tmp.map((x, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/content/${tmp[index]}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(MainHome, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MainHome;\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    userId: state.authentication.status.currentUser,\n    contentList: state.contents\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getMainRequest: () => {\n      return dispatch(getMainRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHome);\n\nvar _c;\n\n$RefreshReg$(_c, \"MainHome\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/mainHome/MainHome.js"],"names":["React","useEffect","useState","RBS","useParams","connect","getMainRequest","Subbar","makeStyles","TextField","Button","Grid","Link","useStyles","theme","root","margin","spacing","width","MainHome","contentList","userId","voteHits","voteID","voteRegDate","voteTitle","contentItem","items","map","item","visibility","push","P","tmp","x","index","mapStateToProps","state","console","log","authentication","status","currentUser","contents","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMainRequest } from \"../../redux\";\r\nimport Subbar from \"../Subbar\";\r\n\r\n// material import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction MainHome({ getMainRequest, contentList, userId }) {\r\n  let voteHits = [];\r\n  let voteID = [];\r\n  let voteRegDate = [];\r\n  let voteTitle = [];\r\n\r\n  useEffect(() => {\r\n    getMainRequest();\r\n  }, []);\r\n\r\n  //데이터 받기\r\n  const contentItem = items.map((item) => (\r\n    <div key={item.voteID} style={{ visibility: \"hidden\" }}>\r\n      {\r\n        (voteHits.push(item.voteHits),\r\n        voteID.push(item.voteID),\r\n        voteRegDate.push(item.voteRegDate),\r\n        voteTitle.push(item.voteTitle))\r\n      }\r\n    </div>\r\n  ));\r\n\r\n  //Contents에 관한 부분\r\n  function contentList() {\r\n    let P = [];\r\n    // for (let i = 0; i < items.selecContent.length; i++) {\r\n    //   P.push((items.selecHits[i] / items.voteHits) * 100);\r\n    //   P[i] = P[i].toFixed(2);\r\n    // }\r\n    return (\r\n      <div className={useStyles.root}>\r\n        <Subbar></Subbar>\r\n        <Grid container spacing={2}>\r\n          {tmp.map((x, index) => (\r\n            <Grid item xs={6} sm={3}>\r\n              <Link key={index} to={`/content/${tmp[index]}`}></Link>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    contentList: state.contents,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMainRequest: () => {\r\n      return dispatch(getMainRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHome);\r\n"]},"metadata":{},"sourceType":"module"}