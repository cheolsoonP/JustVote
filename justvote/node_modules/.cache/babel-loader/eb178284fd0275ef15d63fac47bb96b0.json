{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\Doka.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { create } from \"doka\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: 16,\n  padding: 20\n};\nconst thumb = {\n  position: \"relative\",\n  display: \"inline-flex\",\n  borderRadius: 2,\n  border: \"1px solid #eaeaea\",\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: \"border-box\"\n};\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\"\n};\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\"\n};\nconst thumbButton = {\n  position: \"absolute\",\n  right: 10,\n  bottom: 10,\n  background: \"rgba(0,0,0,.8)\",\n  color: \"#fff\",\n  border: 0,\n  borderRadius: \".325em\",\n  cursor: \"pointer\"\n};\n\nconst editImage = (image, done) => {\n  const imageFile = image.doka ? image.doka.file : image;\n  const imageState = image.doka ? image.doka.data : {};\n  create({ // recreate previous state\n    ...imageState,\n    // load original image file\n    src: imageFile,\n    outputData: true,\n    onconfirm: ({\n      file,\n      data\n    }) => {\n      Object.assign(file, {\n        doka: {\n          file: imageFile,\n          data\n        }\n      });\n      done(file);\n    }\n  });\n};\n\nexport function Doka(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/*\",\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbs = files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: thumbButton,\n      onClick: () => editImage(file, output => {\n        const updatedFiles = [...files]; // replace original image with new image\n\n        updatedFiles[index] = output; // revoke preview URL for old image\n\n        if (file.preview) URL.revokeObjectURL(file.preview); // set new preview URL\n\n        Object.assign(output, {\n          preview: URL.createObjectURL(output)\n        }); // update view\n\n        setFiles(updatedFiles);\n      }),\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, file.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this));\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: \"dropzone\"\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Doka, \"Ee7v0zhGi6g6i2mfjkXvTwu1SJQ=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Doka;\n\n/*#__PURE__*/\n_jsxDEV(Doka, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 136,\n  columnNumber: 1\n}, this);\n\nvar _c;\n\n$RefreshReg$(_c, \"Doka\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/Doka.js"],"names":["React","useEffect","useState","useDropzone","create","thumbsContainer","display","flexDirection","flexWrap","marginTop","padding","thumb","position","borderRadius","border","marginBottom","marginRight","width","height","boxSizing","thumbInner","minWidth","overflow","img","thumbButton","right","bottom","background","color","cursor","editImage","image","done","imageFile","doka","file","imageState","data","src","outputData","onconfirm","Object","assign","Doka","props","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","preview","URL","createObjectURL","thumbs","index","output","updatedFiles","revokeObjectURL","name","forEach","className"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nimport { create } from \"doka\";\r\n\r\nconst thumbsContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  flexWrap: \"wrap\",\r\n  marginTop: 16,\r\n  padding: 20,\r\n};\r\n\r\nconst thumb = {\r\n  position: \"relative\",\r\n  display: \"inline-flex\",\r\n  borderRadius: 2,\r\n  border: \"1px solid #eaeaea\",\r\n  marginBottom: 8,\r\n  marginRight: 8,\r\n  width: 100,\r\n  height: 100,\r\n  padding: 4,\r\n  boxSizing: \"border-box\",\r\n};\r\n\r\nconst thumbInner = {\r\n  display: \"flex\",\r\n  minWidth: 0,\r\n  overflow: \"hidden\",\r\n};\r\n\r\nconst img = {\r\n  display: \"block\",\r\n  width: \"auto\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst thumbButton = {\r\n  position: \"absolute\",\r\n  right: 10,\r\n  bottom: 10,\r\n  background: \"rgba(0,0,0,.8)\",\r\n  color: \"#fff\",\r\n  border: 0,\r\n  borderRadius: \".325em\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nconst editImage = (image, done) => {\r\n  const imageFile = image.doka ? image.doka.file : image;\r\n  const imageState = image.doka ? image.doka.data : {};\r\n  create({\r\n    // recreate previous state\r\n    ...imageState,\r\n\r\n    // load original image file\r\n    src: imageFile,\r\n    outputData: true,\r\n\r\n    onconfirm: ({ file, data }) => {\r\n      Object.assign(file, {\r\n        doka: { file: imageFile, data },\r\n      });\r\n      done(file);\r\n    },\r\n  });\r\n};\r\n\r\nexport function Doka(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const thumbs = files.map((file, index) => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img src={file.preview} style={img} alt=\"\" />\r\n      </div>\r\n      <button\r\n        style={thumbButton}\r\n        onClick={() =>\r\n          editImage(file, (output) => {\r\n            const updatedFiles = [...files];\r\n\r\n            // replace original image with new image\r\n            updatedFiles[index] = output;\r\n\r\n            // revoke preview URL for old image\r\n            if (file.preview) URL.revokeObjectURL(file.preview);\r\n\r\n            // set new preview URL\r\n            Object.assign(output, {\r\n              preview: URL.createObjectURL(output),\r\n            });\r\n\r\n            // update view\r\n            setFiles(updatedFiles);\r\n          })\r\n        }\r\n      >\r\n        edit\r\n      </button>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({ className: \"dropzone\" })}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside style={thumbsContainer}>{thumbs}</aside>\r\n    </section>\r\n  );\r\n}\r\n\r\n<Doka />;\r\n"]},"metadata":{},"sourceType":"module"}