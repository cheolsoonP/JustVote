{"ast":null,"code":"import axios from \"axios\";\nimport { AUTH_LOGIN, AUTH_LOGIN_SUCCESS, AUTH_LOGIN_FAILURE, AUTH_GET_STATUS, AUTH_GET_STATUS_SUCCESS, AUTH_GET_STATUS_FAILURE, AUTH_LOGOUT } from \"./types\";\n/* LOGIN */\n\nexport function loginRequest(userId, userPass) {\n  return dispatch => {\n    // Inform Login API is starting\n    dispatch(login());\n    let body = {\n      userId: userId,\n      userPass: userPass\n    };\n    console.log(\"LoginBody: \" + body.userId + \" / \" + body.userPass); // API REQUEST\n\n    return axios.post(\"http://localhost:8080/signin\", body).then(response => {\n      // SUCCEED\n      dispatch(loginSuccess(userId));\n    }).catch(error => {\n      // FAILED\n      dispatch(loginFailure());\n    });\n  };\n}\nexport function login() {\n  return {\n    type: AUTH_LOGIN\n  };\n}\nexport function loginSuccess(userId) {\n  return {\n    type: AUTH_LOGIN_SUCCESS,\n    userId\n  };\n}\nexport function loginFailure() {\n  return {\n    type: AUTH_LOGIN_FAILURE\n  };\n}\n/* GET STATUS */\n\nexport function getStatusRequest() {\n  return dispatch => {\n    // inform Get Status API is starting\n    dispatch(getStatus());\n    return axios.get(\"/api/account/getInfo\").then(response => {\n      dispatch(getStatusSuccess(response.data.info.username)); //HTTP 틍신을 통해 username을 빋이옴\n    }).catch(error => {\n      dispatch(getStatusFailure());\n    });\n  };\n}\nexport function getStatus() {\n  return {\n    type: AUTH_GET_STATUS\n  };\n}\nexport function getStatusSuccess(username) {\n  return {\n    type: AUTH_GET_STATUS_SUCCESS,\n    username\n  };\n}\nexport function getStatusFailure() {\n  return {\n    type: AUTH_GET_STATUS_FAILURE\n  };\n}\n/* Logout */\n\nexport function logoutRequest() {\n  return dispatch => {\n    return axios.post(\"/api/account/logout\").then(response => {\n      dispatch(logout());\n    });\n  };\n}\nexport function logout() {\n  return {\n    type: AUTH_LOGOUT\n  };\n}","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/redux/authentication/actions.js"],"names":["axios","AUTH_LOGIN","AUTH_LOGIN_SUCCESS","AUTH_LOGIN_FAILURE","AUTH_GET_STATUS","AUTH_GET_STATUS_SUCCESS","AUTH_GET_STATUS_FAILURE","AUTH_LOGOUT","loginRequest","userId","userPass","dispatch","login","body","console","log","post","then","response","loginSuccess","catch","error","loginFailure","type","getStatusRequest","getStatus","get","getStatusSuccess","data","info","username","getStatusFailure","logoutRequest","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,kBAFF,EAGEC,kBAHF,EAIEC,eAJF,EAKEC,uBALF,EAMEC,uBANF,EAOEC,WAPF,QAQO,SARP;AAUA;;AACA,OAAO,SAASC,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwC;AAC7C,SAAQC,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACC,KAAK,EAAN,CAAR;AAEA,QAAIC,IAAI,GAAG;AACTJ,MAAAA,MAAM,EAAEA,MADC;AAETC,MAAAA,QAAQ,EAAEA;AAFD,KAAX;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBF,IAAI,CAACJ,MAArB,GAA8B,KAA9B,GAAsCI,IAAI,CAACH,QAAvD,EATmB,CAWnB;;AACA,WAAOV,KAAK,CACTgB,IADI,CACC,8BADD,EACiCH,IADjC,EAEJI,IAFI,CAEEC,QAAD,IAAc;AAClB;AACAP,MAAAA,QAAQ,CAACQ,YAAY,CAACV,MAAD,CAAb,CAAR;AACD,KALI,EAMJW,KANI,CAMGC,KAAD,IAAW;AAChB;AACAV,MAAAA,QAAQ,CAACW,YAAY,EAAb,CAAR;AACD,KATI,CAAP;AAUD,GAtBD;AAuBD;AAED,OAAO,SAASV,KAAT,GAAiB;AACtB,SAAO;AACLW,IAAAA,IAAI,EAAEtB;AADD,GAAP;AAGD;AAED,OAAO,SAASkB,YAAT,CAAsBV,MAAtB,EAA8B;AACnC,SAAO;AACLc,IAAAA,IAAI,EAAErB,kBADD;AAELO,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASa,YAAT,GAAwB;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAASqB,gBAAT,GAA4B;AACjC,SAAQb,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACc,SAAS,EAAV,CAAR;AAEA,WAAOzB,KAAK,CACT0B,GADI,CACA,sBADA,EAEJT,IAFI,CAEEC,QAAD,IAAc;AAClBP,MAAAA,QAAQ,CAACgB,gBAAgB,CAACT,QAAQ,CAACU,IAAT,CAAcC,IAAd,CAAmBC,QAApB,CAAjB,CAAR,CADkB,CACuC;AAC1D,KAJI,EAKJV,KALI,CAKGC,KAAD,IAAW;AAChBV,MAAAA,QAAQ,CAACoB,gBAAgB,EAAjB,CAAR;AACD,KAPI,CAAP;AAQD,GAZD;AAaD;AAED,OAAO,SAASN,SAAT,GAAqB;AAC1B,SAAO;AACLF,IAAAA,IAAI,EAAEnB;AADD,GAAP;AAGD;AAED,OAAO,SAASuB,gBAAT,CAA0BG,QAA1B,EAAoC;AACzC,SAAO;AACLP,IAAAA,IAAI,EAAElB,uBADD;AAELyB,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAO;AACLR,IAAAA,IAAI,EAAEjB;AADD,GAAP;AAGD;AAED;;AACA,OAAO,SAAS0B,aAAT,GAAyB;AAC9B,SAAQrB,QAAD,IAAc;AACnB,WAAOX,KAAK,CAACgB,IAAN,CAAW,qBAAX,EAAkCC,IAAlC,CAAwCC,QAAD,IAAc;AAC1DP,MAAAA,QAAQ,CAACsB,MAAM,EAAP,CAAR;AACD,KAFM,CAAP;AAGD,GAJD;AAKD;AAED,OAAO,SAASA,MAAT,GAAkB;AACvB,SAAO;AACLV,IAAAA,IAAI,EAAEhB;AADD,GAAP;AAGD","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  AUTH_LOGIN,\r\n  AUTH_LOGIN_SUCCESS,\r\n  AUTH_LOGIN_FAILURE,\r\n  AUTH_GET_STATUS,\r\n  AUTH_GET_STATUS_SUCCESS,\r\n  AUTH_GET_STATUS_FAILURE,\r\n  AUTH_LOGOUT,\r\n} from \"./types\";\r\n\r\n/* LOGIN */\r\nexport function loginRequest(userId, userPass) {\r\n  return (dispatch) => {\r\n    // Inform Login API is starting\r\n    dispatch(login());\r\n\r\n    let body = {\r\n      userId: userId,\r\n      userPass: userPass,\r\n    };\r\n\r\n    console.log(\"LoginBody: \" + body.userId + \" / \" + body.userPass);\r\n\r\n    // API REQUEST\r\n    return axios\r\n      .post(\"http://localhost:8080/signin\", body)\r\n      .then((response) => {\r\n        // SUCCEED\r\n        dispatch(loginSuccess(userId));\r\n      })\r\n      .catch((error) => {\r\n        // FAILED\r\n        dispatch(loginFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function login() {\r\n  return {\r\n    type: AUTH_LOGIN,\r\n  };\r\n}\r\n\r\nexport function loginSuccess(userId) {\r\n  return {\r\n    type: AUTH_LOGIN_SUCCESS,\r\n    userId,\r\n  };\r\n}\r\n\r\nexport function loginFailure() {\r\n  return {\r\n    type: AUTH_LOGIN_FAILURE,\r\n  };\r\n}\r\n\r\n/* GET STATUS */\r\nexport function getStatusRequest() {\r\n  return (dispatch) => {\r\n    // inform Get Status API is starting\r\n    dispatch(getStatus());\r\n\r\n    return axios\r\n      .get(\"/api/account/getInfo\")\r\n      .then((response) => {\r\n        dispatch(getStatusSuccess(response.data.info.username)); //HTTP 틍신을 통해 username을 빋이옴\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getStatusFailure());\r\n      });\r\n  };\r\n}\r\n\r\nexport function getStatus() {\r\n  return {\r\n    type: AUTH_GET_STATUS,\r\n  };\r\n}\r\n\r\nexport function getStatusSuccess(username) {\r\n  return {\r\n    type: AUTH_GET_STATUS_SUCCESS,\r\n    username,\r\n  };\r\n}\r\n\r\nexport function getStatusFailure() {\r\n  return {\r\n    type: AUTH_GET_STATUS_FAILURE,\r\n  };\r\n}\r\n\r\n/* Logout */\r\nexport function logoutRequest() {\r\n  return (dispatch) => {\r\n    return axios.post(\"/api/account/logout\").then((response) => {\r\n      dispatch(logout());\r\n    });\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return {\r\n    type: AUTH_LOGOUT,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}