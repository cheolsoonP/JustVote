{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cheolsoon\\\\Desktop\\\\Front\\\\justvote\\\\src\\\\components\\\\createvote\\\\MyDropzone2.js\";\nimport React, { useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport Dropzone from \"react-dropzone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyDropzone(props) {\n  const onDrop = files => {\n    const [uploadedFile] = files;\n    setFile(uploadedFile);\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewSrc(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(uploadedFile);\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\n    dropRef.current.style.border = \"2px dashed #e9ebeb\";\n  };\n\n  const updateBorder = dragState => {\n    if (dragState === \"over\") {\n      dropRef.current.style.border = \"2px solid #000\";\n    } else if (dragState === \"leave\") {\n      dropRef.current.style.border = \"2px dashed #e9ebeb\";\n    }\n  };\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const {\n        title,\n        description\n      } = state;\n\n      if (title.trim() !== \"\" && description.trim() !== \"\") {\n        if (file) {\n          const formData = new FormData();\n          formData.append(\"file\", file);\n          formData.append(\"title\", title);\n          formData.append(\"description\", description);\n          setErrorMsg(\"\");\n          await axios.post(\"http://localhost:8080/imgRegister\", formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\"\n            }\n          });\n        } else {\n          setErrorMsg(\"Please select a file to add.\");\n        }\n      } else {\n        setErrorMsg(\"Please enter all the field values.\");\n      }\n    } catch (error) {\n      error.response && setErrorMsg(error.response.data);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-section\",\n    children: [/*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: onDrop,\n      onDragEnter: () => updateBorder(\"over\"),\n      onDragLeave: () => updateBorder(\"leave\"),\n      children: ({\n        getRootProps,\n        getInputProps\n      }) => /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n          className: \"drop-zone\"\n        }),\n        ref: dropRef,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag and drop a file OR click here to select a file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Selected file:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), \" \", file.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), previewSrc ? isPreviewAvailable ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"preview-image\",\n        src: previewSrc,\n        alt: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No preview available for this file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Image preview will be shown here after selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = MyDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyDropzone\");","map":{"version":3,"sources":["C:/Users/Cheolsoon/Desktop/Front/justvote/src/components/createvote/MyDropzone2.js"],"names":["React","useState","useCallback","useDropzone","axios","Dropzone","MyDropzone","props","onDrop","files","uploadedFile","setFile","fileReader","FileReader","onload","setPreviewSrc","result","readAsDataURL","setIsPreviewAvailable","name","match","dropRef","current","style","border","updateBorder","dragState","handleOnSubmit","event","preventDefault","title","description","state","trim","file","formData","FormData","append","setErrorMsg","post","headers","error","response","data","getRootProps","getInputProps","className","previewSrc","isPreviewAvailable"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function MyDropzone(props) {\r\n  const onDrop = (files) => {\r\n    const [uploadedFile] = files;\r\n    setFile(uploadedFile);\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    dropRef.current.style.border = \"2px dashed #e9ebeb\";\r\n  };\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === \"over\") {\r\n      dropRef.current.style.border = \"2px solid #000\";\r\n    } else if (dragState === \"leave\") {\r\n      dropRef.current.style.border = \"2px dashed #e9ebeb\";\r\n    }\r\n  };\r\n\r\n  const handleOnSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const { title, description } = state;\r\n      if (title.trim() !== \"\" && description.trim() !== \"\") {\r\n        if (file) {\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"title\", title);\r\n          formData.append(\"description\", description);\r\n          setErrorMsg(\"\");\r\n          await axios.post(\"http://localhost:8080/imgRegister\", formData, {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n        } else {\r\n          setErrorMsg(\"Please select a file to add.\");\r\n        }\r\n      } else {\r\n        setErrorMsg(\"Please enter all the field values.\");\r\n      }\r\n    } catch (error) {\r\n      error.response && setErrorMsg(error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-section\">\r\n      <Dropzone\r\n        onDrop={onDrop}\r\n        onDragEnter={() => updateBorder(\"over\")}\r\n        onDragLeave={() => updateBorder(\"leave\")}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: \"drop-zone\" })} ref={dropRef}>\r\n            <input {...getInputProps()} />\r\n            <p>Drag and drop a file OR click here to select a file</p>\r\n            {file && (\r\n              <div>\r\n                <strong>Selected file:</strong> {file.name}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Dropzone>\r\n      {previewSrc ? (\r\n        isPreviewAvailable ? (\r\n          <div className=\"image-preview\">\r\n            <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"preview-message\">\r\n            <p>No preview available for this file</p>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <div className=\"preview-message\">\r\n          <p>Image preview will be shown here after selection</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}