[{"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\index.js":"1","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\App.js":"2","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\reportWebVitals.js":"3","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\store.js":"4","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Introduce.js":"5","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\MakeVote.js":"6","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Ranking.js":"7","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\VotePage.js":"8","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\rootReducer.js":"9","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\pages\\index.js":"10","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\pages\\About.js":"11","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\pages\\Home.js":"12","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\FullWidthGrid.js":"13","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Subbar.js":"14","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\MediaCard.js":"15","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\SubbarItems.js":"16","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Login.js":"17","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Authentication.js":"18","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\actions.js":"19","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\types.js":"20","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\reducer.js":"21","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\SignUp.js":"22","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\Header.js":"23","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\TopBar.js":"24","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\voteContainer.js":"25","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\createVote.js":"26","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\actions.js":"27","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\types.js":"28","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\reducer.js":"29","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\VoteContainer.js":"30","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\CreateVote.js":"31","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\index.js":"32","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\actions.js":"33","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\reducer.js":"34","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\MyDropzone.js":"35","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\types.js":"36","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\reducer.js":"37","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\types.js":"38","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\mainHome\\MainHome.js":"39","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\actions.js":"40","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\ranking\\Ranking.js":"41","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\AuthSignUp.js":"42","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\reducer.js":"43","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\types.js":"44","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\actions.js":"45"},{"size":666,"mtime":1625148133199,"results":"46","hashOfConfig":"47"},{"size":1218,"mtime":1625581321563,"results":"48","hashOfConfig":"47"},{"size":375,"mtime":1621520334000,"results":"49","hashOfConfig":"47"},{"size":667,"mtime":1625578263719,"results":"50","hashOfConfig":"47"},{"size":178,"mtime":1623643904000,"results":"51","hashOfConfig":"47"},{"size":178,"mtime":1621520332113,"results":"52","hashOfConfig":"47"},{"size":173,"mtime":1621520334000,"results":"53","hashOfConfig":"47"},{"size":10589,"mtime":1625580057589,"results":"54","hashOfConfig":"47"},{"size":549,"mtime":1625837074224,"results":"55","hashOfConfig":"47"},{"size":88,"mtime":1622018592000,"results":"56","hashOfConfig":"47"},{"size":303,"mtime":1621520334000,"results":"57","hashOfConfig":"47"},{"size":401,"mtime":1622122234000,"results":"58","hashOfConfig":"47"},{"size":852,"mtime":1621946604000,"results":"59","hashOfConfig":"47"},{"size":1702,"mtime":1621949346000,"results":"60","hashOfConfig":"47"},{"size":2504,"mtime":1623607406000,"results":"61","hashOfConfig":"47"},{"size":644,"mtime":1621520334000,"results":"62","hashOfConfig":"47"},{"size":1485,"mtime":1625580921711,"results":"63","hashOfConfig":"47"},{"size":4086,"mtime":1625580844699,"results":"64","hashOfConfig":"47"},{"size":2034,"mtime":1623593378000,"results":"65","hashOfConfig":"47"},{"size":423,"mtime":1622006014000,"results":"66","hashOfConfig":"47"},{"size":1861,"mtime":1623590890000,"results":"67","hashOfConfig":"47"},{"size":1869,"mtime":1625837762411,"results":"68","hashOfConfig":"47"},{"size":3048,"mtime":1625576818999,"results":"69","hashOfConfig":"47"},{"size":2250,"mtime":1623572978000,"results":"70","hashOfConfig":"47"},{"size":979,"mtime":1622130527460,"results":"71","hashOfConfig":"47"},{"size":2937,"mtime":1622133760277,"results":"72","hashOfConfig":"47"},{"size":3137,"mtime":1623332338000,"results":"73","hashOfConfig":"47"},{"size":249,"mtime":1622136842000,"results":"74","hashOfConfig":"47"},{"size":1475,"mtime":1622136842000,"results":"75","hashOfConfig":"47"},{"size":1190,"mtime":1623595898000,"results":"76","hashOfConfig":"47"},{"size":4025,"mtime":1623600056000,"results":"77","hashOfConfig":"47"},{"size":235,"mtime":1625578915386,"results":"78","hashOfConfig":"47"},{"size":2874,"mtime":1625149818492,"results":"79","hashOfConfig":"47"},{"size":2403,"mtime":1623517626000,"results":"80","hashOfConfig":"47"},{"size":2708,"mtime":1623577420000,"results":"81","hashOfConfig":"47"},{"size":637,"mtime":1623517624000,"results":"82","hashOfConfig":"47"},{"size":912,"mtime":1623522500000,"results":"83","hashOfConfig":"47"},{"size":170,"mtime":1623426290000,"results":"84","hashOfConfig":"47"},{"size":2510,"mtime":1625580076104,"results":"85","hashOfConfig":"47"},{"size":836,"mtime":1623517806000,"results":"86","hashOfConfig":"47"},{"size":6354,"mtime":1623576176000,"results":"87","hashOfConfig":"47"},{"size":10965,"mtime":1625837749966,"results":"88","hashOfConfig":"47"},{"size":1212,"mtime":1625583368217,"results":"89","hashOfConfig":"47"},{"size":320,"mtime":1625581773520,"results":"90","hashOfConfig":"47"},{"size":1566,"mtime":1625837809625,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"lgz6lw",{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\index.js",[],["193","194"],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\App.js",["195"],"import \"./App.css\";\r\n\r\nimport VotePage from \"./components/VotePage\";\r\nimport Introduce from \"./components/Introduce\";\r\nimport Ranking from \"./components/ranking/Ranking\";\r\nimport Login from \"./components/login/Login\";\r\nimport Header from \"./components/header/Header\";\r\nimport SignUp from \"./components/signup/SignUp\";\r\nimport { Home } from \"./pages\";\r\nimport MainHome from \"./components/mainHome/MainHome\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport VoteContainer from \"./components/createvote/VoteContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Route path=\"/\" component={Header} />\r\n        <Switch>\r\n          <Route path=\"/Home\" component={MainHome} />\r\n          <Route path=\"/MakeVote\" component={VoteContainer} />\r\n\r\n          <Route path=\"/content/:nam\" component={VotePage} />\r\n\r\n          <Route path=\"/Introduce\">\r\n            <Introduce />\r\n          </Route>\r\n\r\n          <Route path=\"/Ranking\" component={Ranking} />\r\n\r\n          <Route path=\"/SignIn\" component={Login} />\r\n\r\n          <Route path=\"/SignUp\" component={SignUp} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\reportWebVitals.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\store.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Introduce.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\MakeVote.js",[],["196","197"],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Ranking.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\VotePage.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getVotes, registerCommentRequest, setVotesRequest } from \"../redux\";\r\nimport testImage from \"../img/content_img.png\";\r\n\r\nimport image1 from \"../img/content/1cafe.PNG\";\r\nimport image2 from \"../img/content/2food.PNG\";\r\nimport image3 from \"../img/content/3notebook.PNG\";\r\nimport image4 from \"../img/content/4phone.PNG\";\r\nimport image5 from \"../img/content/5popsong.PNG\";\r\nimport image6 from \"../img/content/6stage.PNG\";\r\nimport image7 from \"../img/content/7dog.png\";\r\n\r\n// material import\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    minWidth: 275,\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n    bullet: {\r\n      display: \"inline-block\",\r\n      margin: \"0 2px\",\r\n      transform: \"scale(0.8)\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  },\r\n}));\r\n\r\nconst BorderLinearProgress = withStyles((theme) => ({\r\n  root: {\r\n    height: 10,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor:\r\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\r\n  },\r\n  bar: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"#1a90ff\",\r\n  },\r\n}))(LinearProgress);\r\n\r\nfunction VotePage({\r\n  getVotes,\r\n  loading,\r\n  items,\r\n  userId,\r\n  registerCommentRequest,\r\n}) {\r\n  useEffect(() => {\r\n    getVotes(nam);\r\n  }, []);\r\n\r\n  const [select, setSelect] = useState();\r\n  const [voted, setVoted] = useState(false);\r\n  let contName;\r\n\r\n  const { nam } = useParams();\r\n\r\n  const onChange = ({ target }) => {\r\n    setSelect(select);\r\n    target.name = target.value;\r\n    contName = target.value;\r\n  };\r\n  console.log(items[0]);\r\n  // let items_2 = JSON.stringify(items)\r\n  // console.log(items_2)\r\n  // let items_3 = JSON.parse(items_2)\r\n  // console.log(items_3)\r\n\r\n  let voteID = [];\r\n  let voteTitle = [];\r\n  let voteRegDate = [];\r\n  let voteHits = [];\r\n  let selecID = [];\r\n  let selecContent = [];\r\n  let selecHits = [];\r\n\r\n  //댓글 변수들\r\n  let commentContent = [];\r\n  let commentID = [];\r\n  let commentUserID = [];\r\n\r\n  //데이터 받기\r\n  const voteItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    items.map((item) => (\r\n      <div key={item.voteID} style={{ visibility: \"hidden\" }}>\r\n        {\r\n          (selecContent.push(item.selecContent),\r\n          selecID.push(item.selecID),\r\n          selecHits.push(item.selecHits),\r\n          voteID.push(item.voteID),\r\n          voteTitle.push(item.voteTitle),\r\n          voteRegDate.push(item.voteRegDate),\r\n          voteHits.push(item.voteHits),\r\n          commentContent.push(item.commentContent),\r\n          commentID.push(item.commentID),\r\n          commentUserID.push(item.userId))\r\n        }\r\n      </div>\r\n    ))\r\n  );\r\n\r\n  const selcContent = selecContent.filter(\r\n    (selecContent) => selecContent !== undefined\r\n  );\r\n  const selcHits = selecHits.filter((selecHits) => selecHits !== undefined);\r\n  console.log(selcContent);\r\n  selcHits.shift();\r\n\r\n  console.log();\r\n  for (var i = 0; i < selcHits.length + 1; i++) {\r\n    commentContent.shift();\r\n    commentID.shift();\r\n    commentUserID.shift();\r\n  }\r\n  console.log(commentID);\r\n\r\n  //파라미터\r\n\r\n  let images = new Image();\r\n\r\n  if (nam == 1) {\r\n    images = image1;\r\n  } else if (nam == 2) {\r\n    images = image2;\r\n  } else if (nam == 3) {\r\n    images = image3;\r\n  } else if (nam == 4) {\r\n    images = image4;\r\n  } else if (nam == 5) {\r\n    images = image5;\r\n  } else if (nam == 6) {\r\n    images = image6;\r\n  } else if (nam == 7) {\r\n    images = image7;\r\n  } else {\r\n    images = testImage;\r\n  }\r\n  console.log(images);\r\n\r\n  const selectContent = selcContent.shift();\r\n  // 투표화면 상단\r\n  function VoteTop() {\r\n    return (\r\n      <div className=\"VotePage\">\r\n        <h1 className=\"title\">{voteTitle}</h1>\r\n        <h5 className=\"title\">\r\n          {voteRegDate[0]} | {voteHits}명\r\n        </h5>\r\n        <RBS.Col xs={6} md={4}>\r\n          {/* ../public/content_img.png 이라고 해도 되지만 위치몰라도 고를 수 있는걸 보여주고 싶었음*/}\r\n          <RBS.Image src={images} rounded />\r\n        </RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n  let indexx = 0;\r\n  const handleCheck = (e) => {\r\n    console.log(e.target.key);\r\n    indexx = e.target.key;\r\n  };\r\n  //Contents에 관한 부분\r\n  function contentList() {\r\n    let P = [];\r\n    // for (let i = 1; i < selecContent.length; i++) {\r\n    //   P.push((selecHits[i] / voteHits[0]) * 100);\r\n    //   P[i] = P[i].toFixed(2);\r\n    // }\r\n    return (\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\"></FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"select\"\r\n          name=\"select\"\r\n          value={select}\r\n          onChange={(e) => onChange(e)}\r\n        >\r\n          {selcContent.map((item, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={item}\r\n              control={<Radio />}\r\n              //             onClick={() => handleCheck()}\r\n              label={item}\r\n            ></FormControlLabel>\r\n          ))}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n\r\n  function yesContentList() {\r\n    let P = [];\r\n    let sum = 0;\r\n    for (let i = 0; i < selcHits.length; i++) {\r\n      sum += selcHits[i];\r\n    }\r\n    for (let i = 0; i < selcHits.length; i++) {\r\n      P.push((selcHits[i] / sum) * 100);\r\n      P[i] = P[i].toFixed(1);\r\n    }\r\n    console.log(selecHits);\r\n    return (\r\n      <div>\r\n        {selcHits.map((item, index) => (\r\n          <div key={index} style={{ display: \"block\" }}>\r\n            <>\r\n              {selcContent[index] +\r\n                \" (\" +\r\n                selcHits[index] +\r\n                \"명) \" +\r\n                P[index] +\r\n                \"%\"}\r\n            </>\r\n            <BorderLinearProgress variant=\"determinate\" value={P[index]} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //투표 안한사람 화면\r\n  function notVote() {\r\n    return (\r\n      <div>\r\n        <RBS.Col>{contentList()}</RBS.Col>\r\n        <RBS.Col>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={useStyles.submit}\r\n            onClick={handleSet}\r\n          >\r\n            투표!\r\n          </Button>\r\n        </RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  //투표 한사람 화면\r\n  function yesVote() {\r\n    return (\r\n      <div>\r\n        <RBS.Col>{yesContentList()}</RBS.Col>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 댓글 등록\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setComment(e.target.value);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    let body = {\r\n      userID: userId,\r\n      commentContent: comment,\r\n      voteID: voteID[0],\r\n    };\r\n\r\n    registerCommentRequest(body).then(() => {\r\n      // push해줌\r\n    });\r\n    // comment 등록하면 빈칸으로\r\n  };\r\n\r\n  // 댓글 삭제\r\n  const handelDeleteComment = (e) => {\r\n    let body = {\r\n      userId: userId,\r\n      //댓글 번호?\r\n      //contentTitle: contentTitle,\r\n    };\r\n  };\r\n\r\n  const handleSet = (e) => {\r\n    let body = {\r\n      voteID: voteID[0],\r\n      selecContent: contName,\r\n      userID: userId,\r\n    };\r\n\r\n    setVotesRequest(body);\r\n    setVoted(true);\r\n  };\r\n\r\n  // 댓글 가져오기\r\n  function getComment() {\r\n    return (\r\n      <Grid container spacing={1}>\r\n        {commentID.map((item, index) => (\r\n          <Card className={useStyles.root}>\r\n            <CardContent>\r\n              <Typography\r\n                className={useStyles.title}\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n              >\r\n                {commentUserID[index]}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\">\r\n                {commentContent[index]}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n              <Button size=\"small\">Delete</Button>\r\n            </CardActions>\r\n          </Card>\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"VotePage\">\r\n      <RBS.Container>\r\n        <RBS.Row>\r\n          <RBS.Col>\r\n            <VoteTop></VoteTop>\r\n          </RBS.Col>\r\n          <RBS.Col></RBS.Col>\r\n        </RBS.Row>\r\n      </RBS.Container>\r\n      {voted ? yesVote() : notVote()}\r\n\r\n      <div>\r\n        <form className={useStyles.root}>\r\n          <TextField\r\n            id=\"standard-full-width\"\r\n            label=\"userId\"\r\n            style={{ margin: 8 }}\r\n            placeholder=\"댓글을 입력하세요.\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={useStyles.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            등록하기\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div>{getComment()}</div>\r\n      <div class=\"votes\">{voteItems}</div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    items: state.votes.get.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getVotes: (nam) => {\r\n      return dispatch(getVotes(nam));\r\n    },\r\n    registerCommentRequest: (body) => {\r\n      return dispatch(registerCommentRequest(body));\r\n    },\r\n    setVotesRequest: (body) => {\r\n      return dispatch(setVotesRequest(body));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(VotePage);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\rootReducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\pages\\index.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\pages\\About.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\pages\\Home.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\FullWidthGrid.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\Subbar.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\MediaCard.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\SubbarItems.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Login.js",["212"],"import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Authentication from \"./Authentication\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginRequest } from \"../../redux/authentication/actions\";\r\n\r\nclass Login extends Component {\r\n  handleLogin = (id, pw) => {\r\n    return this.props.loginRequest(id, pw).then(() => {\r\n      console.log(this.props.history);\r\n      if (this.props.status === \"SUCCESS\") {\r\n        // create session data\r\n        let loginData = {\r\n          isLoggedIn: true,\r\n          userId: id,\r\n        };\r\n        document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n        console.log(\"login-cookie : \");\r\n        console.log(document.cookie);\r\n\r\n        // 로그인 성공시 루트 화면으로 돌아감.\r\n        this.props.history.push(\"/\");\r\n        return true;\r\n      } else {\r\n        console.log(\"login-cookie-fail\");\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Authentication onLogin={this.handleLogin} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    status: state.authentication.login.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    loginRequest: (id, pw) => {\r\n      console.log(\"mapDispatchToProps\");\r\n      return dispatch(loginRequest(id, pw));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\login\\Authentication.js",["213","214"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nclass Authentication extends Component {\r\n  state = {\r\n    userId: \"\",\r\n    userPass: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  handleLogin = () => {\r\n    let id = this.state.userId;\r\n    let pw = this.state.userPass;\r\n\r\n    this.props.onLogin(id, pw).then((success) => {\r\n      // 실패하면 비밀번호 재입력 받음\r\n      console.log(\"Auth_handleLogin\");\r\n      if (!success) {\r\n        console.log(this.props);\r\n        console.log(\"Auth_handleLogin_fail\");\r\n        this.setState({\r\n          userPass: \"\",\r\n        });\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const button = {};\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={useStyles.paper}>\r\n          <Avatar className={useStyles.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            LOGIN\r\n          </Typography>\r\n          <form className={useStyles.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"userId\"\r\n              label=\"ID\"\r\n              name=\"userId\"\r\n              autoComplete=\"userId\"\r\n              autoFocus\r\n              value={this.state.userId}\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"userPass\"\r\n              label=\"PASSWORD\"\r\n              type=\"Password\"\r\n              id=\"userPass\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.handleChange}\r\n              value={this.state.userPass}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={useStyles.submit}\r\n              onClick={this.handleLogin}\r\n            >\r\n              로그인\r\n            </Button>\r\n            <Grid container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Link href=\"/SignUp\" variant=\"body2\">\r\n                  {\"계정이 없다면? 회원가입하러 가기\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nAuthentication.propTypes = {\r\n  onLogin: PropTypes.func,\r\n};\r\n\r\nAuthentication.defaultProps = {\r\n  onLogin: (id, pw) => {\r\n    console.error(\"login function not defined\");\r\n  },\r\n};\r\n\r\nexport default Authentication;\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\authentication\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\SignUp.js",["215"],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\Header.js",["216"],"// Header는 Topbar를\r\nimport React, { Component } from \"react\";\r\nimport TopBar from \"./TopBar\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getStatusRequest,\r\n  logoutRequest,\r\n} from \"../../redux/authentication/actions\";\r\n\r\nclass Header extends Component {\r\n  componentDidMount() {\r\n    //컴포넌트 렌더링이 맨 처음 완료된 이후에 바로 세션확인\r\n    // get cookie by name\r\n    console.log(\"header-cookie : \" + document.cookie);\r\n    function getCookie(name) {\r\n      var value = \"; \" + document.cookie;\r\n      var parts = value.split(\"; \" + name + \"=\");\r\n      if (parts.length == 2) return parts.pop().split(\";\").shift();\r\n    }\r\n\r\n    // get loginData from cookie\r\n    let loginData = getCookie(\"key\");\r\n\r\n    // if loginData is undefined, do nothing\r\n    if (typeof loginData === \"undefined\") return;\r\n\r\n    // decode base64 & parse json\r\n    loginData = JSON.parse(atob(loginData));\r\n    console.log(loginData);\r\n    // if not logged in, do nothing\r\n    if (!loginData.isLoggedIn) return;\r\n\r\n    // page refreshed & has a session in cookie,\r\n    // check whether this cookie is valid or not\r\n    this.props.getStatusRequest().then(() => {\r\n      // if session is not valid\r\n      console.log(this.props.status.valid);\r\n      if (!this.props.status.valid) {\r\n        // logout the session\r\n        loginData = {\r\n          isLoggedIn: false,\r\n          userId: \"\",\r\n        };\r\n\r\n        document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n\r\n        // and notify\r\n        //let $toastContent = $();\r\n        //'<span style=\"color: #FFB4BA\">Your session is expired, please log in again</span>'\r\n        //Materialize.toast($toastContent, 4000);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleLogout = () => {\r\n    this.props.logoutRequest().then(() => {\r\n      //Materialize.toast(\"Good Bye!\", 2000);\r\n\r\n      // EMPTIES THE SESSION\r\n      let loginData = {\r\n        isLoggedIn: false,\r\n        username: \"\",\r\n      };\r\n\r\n      document.cookie = \"key=\" + btoa(JSON.stringify(loginData));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    /* Check whether current route is login or register using regex */\r\n\r\n    let thisPath = this.props.location.pathname;\r\n\r\n    // 현재 경로가 '/'라면 Home으로 이동\r\n    if (thisPath === \"/\") {\r\n      this.props.history.push(\"/Home\");\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <TopBar\r\n            isLoggedIn={this.props.status.isLoggedIn}\r\n            onLogout={this.handleLogout}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(\r\n    \"state.authentication.status.isLoggedIn\" +\r\n      state.authentication.status.isLoggedIn\r\n  );\r\n  return {\r\n    status: state.authentication.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getStatusRequest: () => {\r\n      return dispatch(getStatusRequest());\r\n    },\r\n    logoutRequest: () => {\r\n      return dispatch(logoutRequest());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\header\\TopBar.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\voteContainer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\createVote.js",["217","218"],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\makevote\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\VoteContainer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\CreateVote.js",["219"],"import React, { Component } from \"react\";\r\n// import { connect } from \"react-redux\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./createvote.css\";\r\n\r\n// import axios from 'axios';\r\n\r\n// import { CreateVotes } from '../redux/makevote/actions';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MyDropzone from \"./MyDropzone\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nclass CreateVote extends Component {\r\n  state = {\r\n    voteTitle: \"\",\r\n    voteContents: [\"\"],\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let nextState = {};\r\n    nextState[e.target.name] = e.target.value;\r\n    this.setState(nextState);\r\n  };\r\n\r\n  addAnswer = (e) => {\r\n    this.setState({ voteContents: [...this.state.voteContents, \"\"] });\r\n  };\r\n\r\n  removeAnswer = (index) => {\r\n    const newContents = this.state.voteContents.filter((content, i) => {\r\n      return i !== index;\r\n    });\r\n\r\n    this.setState({ voteContents: newContents });\r\n  };\r\n\r\n  handleAnswer = (e, index) => {\r\n    const voteContents = [...this.state.voteContents];\r\n    voteContents[index] = e.target.value;\r\n    this.setState({ voteContents });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state);\r\n    let body = {\r\n      voteTitle: this.state.voteTitle,\r\n      selecContentList: this.state.voteContents,\r\n    };\r\n\r\n    console.log(body);\r\n\r\n    this.props.onPost(body).then(() => {\r\n      // 보내지면 빈칸으로 변경\r\n      this.setState({\r\n        voteTitle: \"\",\r\n        voteContents: [\"\"],\r\n      });\r\n    });\r\n    // this.props.CreateVotes(this.state);\r\n  };\r\n\r\n  submitImg = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(FileReader);\r\n  };\r\n\r\n  render() {\r\n    const voteContents = this.state.voteContents.map((content, i) => (\r\n      <div key={i} className=\"vconContainer\">\r\n        <input\r\n          className=\"content\"\r\n          type=\"text\"\r\n          value={content}\r\n          key={i}\r\n          onChange={(e) => this.handleAnswer(e, i)}\r\n        />\r\n        <div className=\"button-container\">\r\n          <button\r\n            className=\"remove-button\"\r\n            onClick={(e) => this.removeAnswer(i)}\r\n          >\r\n            삭제\r\n          </button>\r\n          {/* <Button\r\n            className=\"remove-button\"\r\n            type=\"button\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={(e) => this.removeAnswer(i)}\r\n          >\r\n            삭제\r\n          </Button> */}\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"form\">\r\n          <h3 className=\"header\">투표 만들기</h3>\r\n          <div className=\"title-holder\">\r\n            <label className=\"title-name\" htmlFor=\"voteTitle\">\r\n              투표 제목\r\n            </label>\r\n            <input\r\n              className=\"title\"\r\n              type=\"text\"\r\n              name=\"voteTitle\"\r\n              value={this.state.voteTitle}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"conContainer\">\r\n            <label className=\"conName\">투표 항목</label>\r\n            {voteContents}\r\n          </div>\r\n          <div className=\"addcontainer\">\r\n            <button className=\"button\" onClick={this.addAnswer}>\r\n              항목 추가\r\n            </button>\r\n          </div>\r\n          <div className=\"subcontainer\">\r\n            <button className=\"button\" onClick={this.handleSubmit}>\r\n              투표 만들기\r\n            </button>\r\n            <MyDropzone />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCreateVote.propTypes = {\r\n  onPost: propTypes.func,\r\n};\r\n\r\nCreateVote.defaultProps = {\r\n  onPost: (body) => {\r\n    console.error(\"post function not defined\");\r\n  },\r\n};\r\n\r\nexport default CreateVote;\r\n// export default connect(() => ({}), { CreateVotes })(CreateVote);","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\index.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\createvote\\MyDropzone.js",["220","221","222","223"],"import React, { useState, useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function MyDropzone(props) {\r\n  const [Images, setImages] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n\r\n  const onDrop = useCallback(async (acceptedFiles) => {\r\n    // 사용자가 올린 정보를 확인해야 하므로 일단 서버로 전송합니다.\r\n    // 제목 같은 건 폼을 제출한 이후에 달아주도록 합시다.\r\n\r\n    // 폼데이터 구성\r\n    const formData = new FormData();\r\n\r\n    const config = {\r\n      header: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n    console.log(acceptedFiles[0]);\r\n\r\n    await axios\r\n      .post(\"http://localhost:8080/imgRegister\", formData, config)\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setImages([...Images, response.data.filePath]);\r\n          console.log(Images);\r\n        } else {\r\n          alert(\"파일 저장 실패\");\r\n        }\r\n      });\r\n\r\n    acceptedFiles.forEach((file) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onabort = () => console.log(\"file reading was aborted\");\r\n      reader.onerror = () => console.log(\"file reading has failed\");\r\n      reader.onload = () => {\r\n        // Do whatever you want with the file contents\r\n        const binaryStr = reader.result;\r\n        console.log(binaryStr);\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n  });\r\n\r\n  const images = files.map((file) => (\r\n    <div key={file.name}>\r\n      <div>\r\n        <img src={file.preview} style={{ width: \"200px\" }} alt=\"preview\" />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  const RootProps = {\r\n    ...getRootProps(),\r\n  };\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {isDragActive ? (\r\n        <p>Drop files here</p>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"3em\", marginBottom: \"5px\" }}>\r\n            <i className=\"fas fa-file-upload\"></i>\r\n          </div>\r\n          <div>이미지 넣기</div>\r\n        </div>\r\n      )}\r\n      <div>{images}</div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\getVotes\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\mainHome\\MainHome.js",["224","225","226","227","228","229","230"],"import React, { useEffect, useState } from \"react\";\r\nimport * as RBS from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMainRequest } from \"../../redux\";\r\nimport Subbar from \"../Subbar\";\r\nimport MediaCard from \"../MediaCard\";\r\n\r\n// material import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction MainHome({ getMainRequest, contentList, userId, loading }) {\r\n  let voteHits = [];\r\n  let voteID = [];\r\n  let voteRegDate = [];\r\n  let voteTitle = [];\r\n\r\n  let count = 0;\r\n  useEffect(() => {\r\n    getMainRequest();\r\n  }, []);\r\n\r\n  console.log(contentList);\r\n\r\n  //데이터 받기\r\n  const contentItems = loading ? (\r\n    <div>is loading...</div>\r\n  ) : (\r\n    contentList.map((content) => (\r\n      <div key={content.voteID} style={{ visibility: \"hidden\" }}>\r\n        {\r\n          (voteHits.push(content.voteHits),\r\n          voteID.push(content.voteID),\r\n          voteRegDate.push(content.voteRegDate),\r\n          voteTitle.push(content.voteTitle))\r\n        }\r\n      </div>\r\n    ))\r\n  );\r\n  console.log(voteTitle);\r\n\r\n  //Contents에 관한 부분\r\n  return (\r\n    <div className={useStyles.root}>\r\n      <Subbar></Subbar>\r\n      <Grid container spacing={2}>\r\n        {contentList.map((content, index) => (\r\n          <Grid item xs={6} sm={3}>\r\n            <Link key={index} to={`/content/${voteID[index]}`}>\r\n              <MediaCard\r\n                voteHits={content.voteHits}\r\n                userID={content.userID}\r\n                voteRegDate={content.voteRegDate}\r\n                voteTitle={content.voteTitle}\r\n                count={count++}\r\n              ></MediaCard>\r\n            </Link>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userId: state.authentication.status.currentUser,\r\n    contentList: state.contents.status.voteContents,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getMainRequest: () => {\r\n      return dispatch(getMainRequest());\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainHome);\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\mainGetvotes\\actions.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\ranking\\Ranking.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251"],"import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport \"./ranking.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport icon1 from \"../../img/icon/1.png\";\r\nimport icon2 from \"../../img/icon/2.png\";\r\nimport icon3 from \"../../img/icon/3.png\";\r\nimport icon4 from \"../../img/icon/4.png\";\r\nimport icon5 from \"../../img/icon/5.png\";\r\nimport icon6 from \"../../img/icon/6.png\";\r\nimport icon7 from \"../../img/icon/7.png\";\r\nimport icon8 from \"../../img/icon/8.png\";\r\nimport icon9 from \"../../img/icon/9.png\";\r\nimport icon10 from \"../../img/icon/10.PNG\";\r\n\r\nconst columns = [\r\n  { id: \"rank\", label: \"Rank\", minWidth: 100 },\r\n  { id: \"title\", label: \"Title\", minWidth: 170 },\r\n\r\n  {\r\n    id: \"user\",\r\n    label: \"user\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"hit\",\r\n    label: \"hit\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n];\r\n\r\nfunction createData(rank, title, user, hit) {\r\n  return { rank, title, user, hit };\r\n}\r\n\r\nconst rows = [\r\n  createData(1, \"투표1\", \"김시우\", 123),\r\n  createData(2, \"투표2\", \"조소망\", 121),\r\n  createData(3, \"투표3\", \"박철순\", 120),\r\n  createData(4, \"투표 4\", \"김정원\", 114),\r\n  createData(5, \"투표 5\", \"이상민\", 110),\r\n  createData(6, \"투표 6\", \"이우진\", 106),\r\n  createData(7, \"투표 7\", \"계대환\", 104),\r\n  createData(8, \"투표 8\", \"윤준서\", 100),\r\n  createData(9, \"\"),\r\n  createData(10, \"\"),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"80%\",\r\n    height: \"50%\",\r\n    display: \"flex\",\r\n    padding: \"20px, 20px, 20px, 20px\",\r\n    margin: \"5px\",\r\n  },\r\n  container: {\r\n    maxHeight: 700,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    margin: \"0px 20px 0px 20px\",\r\n    width: 80,\r\n  },\r\n  controls: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    paddingLeft: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function StickyHeadTable() {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 1\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">whthakd</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 244\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon3}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 2\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">Siwoo</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 232\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon10}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 3\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">yanolza</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 226\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon1}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 4\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">firebird</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 208\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon4}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              TOP 5\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">kingWoo</Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              point : 199\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={icon7}\r\n          title=\"Live from space album cover\"\r\n        />\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\components\\signup\\AuthSignUp.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\reducer.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\types.js",[],"C:\\Users\\Cheolsoon\\Desktop\\Front\\justvote\\src\\redux\\signup\\actions.js",[],{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","severity":1,"message":"257","line":9,"column":10,"nodeType":"258","messageId":"259","endLine":9,"endColumn":14},{"ruleId":"252","replacedBy":"260"},{"ruleId":"254","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":79,"column":6,"nodeType":"264","endLine":79,"endColumn":8,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":152,"column":11,"nodeType":"268","messageId":"269","endLine":152,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":154,"column":18,"nodeType":"268","messageId":"269","endLine":154,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":156,"column":18,"nodeType":"268","messageId":"269","endLine":156,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":158,"column":18,"nodeType":"268","messageId":"269","endLine":158,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":160,"column":18,"nodeType":"268","messageId":"269","endLine":160,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":162,"column":18,"nodeType":"268","messageId":"269","endLine":162,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":164,"column":18,"nodeType":"268","messageId":"269","endLine":164,"endColumn":20},{"ruleId":"256","severity":1,"message":"270","line":171,"column":9,"nodeType":"258","messageId":"259","endLine":171,"endColumn":22},{"ruleId":"256","severity":1,"message":"271","line":187,"column":7,"nodeType":"258","messageId":"259","endLine":187,"endColumn":13},{"ruleId":"256","severity":1,"message":"272","line":188,"column":9,"nodeType":"258","messageId":"259","endLine":188,"endColumn":20},{"ruleId":"256","severity":1,"message":"273","line":194,"column":9,"nodeType":"258","messageId":"259","endLine":194,"endColumn":10},{"ruleId":"256","severity":1,"message":"274","line":301,"column":9,"nodeType":"258","messageId":"259","endLine":301,"endColumn":28},{"ruleId":"256","severity":1,"message":"275","line":302,"column":9,"nodeType":"258","messageId":"259","endLine":302,"endColumn":13},{"ruleId":"256","severity":1,"message":"276","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":21},{"ruleId":"256","severity":1,"message":"277","line":15,"column":10,"nodeType":"258","messageId":"259","endLine":15,"endColumn":19},{"ruleId":"256","severity":1,"message":"278","line":79,"column":11,"nodeType":"258","messageId":"259","endLine":79,"endColumn":17},{"ruleId":"256","severity":1,"message":"276","line":4,"column":10,"nodeType":"258","messageId":"259","endLine":4,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":18,"column":24,"nodeType":"268","messageId":"269","endLine":18,"endColumn":26},{"ruleId":"256","severity":1,"message":"279","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":17},{"ruleId":"256","severity":1,"message":"280","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":17},{"ruleId":"256","severity":1,"message":"281","line":12,"column":7,"nodeType":"258","messageId":"259","endLine":12,"endColumn":16},{"ruleId":"256","severity":1,"message":"282","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":16},{"ruleId":"256","severity":1,"message":"283","line":10,"column":9,"nodeType":"258","messageId":"259","endLine":10,"endColumn":15},{"ruleId":"262","severity":1,"message":"284","line":48,"column":6,"nodeType":"264","endLine":48,"endColumn":8,"suggestions":"285"},{"ruleId":"256","severity":1,"message":"286","line":71,"column":9,"nodeType":"258","messageId":"259","endLine":71,"endColumn":18},{"ruleId":"256","severity":1,"message":"287","line":1,"column":28,"nodeType":"258","messageId":"259","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"288","line":2,"column":13,"nodeType":"258","messageId":"259","endLine":2,"endColumn":16},{"ruleId":"256","severity":1,"message":"289","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"290","line":11,"column":8,"nodeType":"258","messageId":"259","endLine":11,"endColumn":17},{"ruleId":"256","severity":1,"message":"291","line":12,"column":8,"nodeType":"258","messageId":"259","endLine":12,"endColumn":14},{"ruleId":"262","severity":1,"message":"292","line":34,"column":6,"nodeType":"264","endLine":34,"endColumn":8,"suggestions":"293"},{"ruleId":"256","severity":1,"message":"294","line":39,"column":9,"nodeType":"258","messageId":"259","endLine":39,"endColumn":21},{"ruleId":"256","severity":1,"message":"295","line":2,"column":22,"nodeType":"258","messageId":"259","endLine":2,"endColumn":30},{"ruleId":"256","severity":1,"message":"296","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":13},{"ruleId":"256","severity":1,"message":"297","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":13},{"ruleId":"256","severity":1,"message":"298","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":17},{"ruleId":"256","severity":1,"message":"299","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":17},{"ruleId":"256","severity":1,"message":"300","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":22},{"ruleId":"256","severity":1,"message":"301","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":17},{"ruleId":"256","severity":1,"message":"302","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":23},{"ruleId":"256","severity":1,"message":"303","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":16},{"ruleId":"256","severity":1,"message":"304","line":15,"column":8,"nodeType":"258","messageId":"259","endLine":15,"endColumn":18},{"ruleId":"256","severity":1,"message":"305","line":19,"column":8,"nodeType":"258","messageId":"259","endLine":19,"endColumn":13},{"ruleId":"256","severity":1,"message":"306","line":22,"column":8,"nodeType":"258","messageId":"259","endLine":22,"endColumn":13},{"ruleId":"256","severity":1,"message":"307","line":23,"column":8,"nodeType":"258","messageId":"259","endLine":23,"endColumn":13},{"ruleId":"256","severity":1,"message":"308","line":25,"column":8,"nodeType":"258","messageId":"259","endLine":25,"endColumn":13},{"ruleId":"256","severity":1,"message":"309","line":26,"column":8,"nodeType":"258","messageId":"259","endLine":26,"endColumn":13},{"ruleId":"256","severity":1,"message":"310","line":29,"column":7,"nodeType":"258","messageId":"259","endLine":29,"endColumn":14},{"ruleId":"256","severity":1,"message":"311","line":53,"column":7,"nodeType":"258","messageId":"259","endLine":53,"endColumn":11},{"ruleId":"256","severity":1,"message":"312","line":98,"column":10,"nodeType":"258","messageId":"259","endLine":98,"endColumn":14},{"ruleId":"256","severity":1,"message":"313","line":99,"column":10,"nodeType":"258","messageId":"259","endLine":99,"endColumn":21},{"ruleId":"256","severity":1,"message":"314","line":101,"column":9,"nodeType":"258","messageId":"259","endLine":101,"endColumn":25},{"ruleId":"256","severity":1,"message":"315","line":105,"column":9,"nodeType":"258","messageId":"259","endLine":105,"endColumn":32},"no-native-reassign",["316"],"no-negated-in-lhs",["317"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar",["316"],["317"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getVotes' and 'nam'. Either include them or remove the dependency array. If 'getVotes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["318"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectContent' is assigned a value but never used.","'indexx' is assigned a value but never used.","'handleCheck' is assigned a value but never used.","'P' is assigned a value but never used.","'handelDeleteComment' is assigned a value but never used.","'body' is assigned a value but never used.","'useSelector' is defined but never used.","'Copyright' is defined but never used.","'button' is assigned a value but never used.","'connect' is defined but never used.","'Container' is defined but never used.","'useStyles' is assigned a value but never used.","'Dropzone' is defined but never used.","'onDrop' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'Images'. Either include it or remove the dependency array. You can also do a functional update 'setImages(I => ...)' if you only need 'Images' in the 'setImages' call.",["319"],"'RootProps' is assigned a value but never used.","'useState' is defined but never used.","'RBS' is defined but never used.","'useParams' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'getMainRequest'. Either include it or remove the dependency array. If 'getMainRequest' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["320"],"'contentItems' is assigned a value but never used.","'useTheme' is defined but never used.","'Paper' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TablePagination' is defined but never used.","'TableRow' is defined but never used.","'IconButton' is defined but never used.","'icon2' is defined but never used.","'icon5' is defined but never used.","'icon6' is defined but never used.","'icon8' is defined but never used.","'icon9' is defined but never used.","'columns' is assigned a value but never used.","'rows' is assigned a value but never used.","'page' is assigned a value but never used.","'rowsPerPage' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},"Update the dependencies array to be: [getVotes, nam]",{"range":"327","text":"328"},"Update the dependencies array to be: [Images]",{"range":"329","text":"330"},"Update the dependencies array to be: [getMainRequest]",{"range":"331","text":"332"},[2312,2314],"[getVotes, nam]",[1456,1458],"[Images]",[946,948],"[getMainRequest]"]